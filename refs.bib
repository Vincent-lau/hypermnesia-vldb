
% Journals

% First the Full Name is given, then the abbreviation used in the AMS Math
% Reviews, with an indication if it could not be found there.
% Note the 2nd overwrites the 1st, so swap them if you want the full name.

 %{AMS}
 @String{AMSTrans = "American Mathematical Society Translations" }
 @String{AMSTrans = "Amer. Math. Soc. Transl." }
 @String{BullAMS = "Bulletin of the American Mathematical Society" }
 @String{BullAMS = "Bull. Amer. Math. Soc." }
 @String{ProcAMS = "Proceedings of the American Mathematical Society" }
 @String{ProcAMS = "Proc. Amer. Math. Soc." }
 @String{TransAMS = "Transactions of the American Mathematical Society" }
 @String{TransAMS = "Trans. Amer. Math. Soc." }

 %ACM
 @String{CACM = "Communications of the {ACM}" }
 @String{CACM = "Commun. {ACM}" }
 @String{CompServ = "Comput. Surveys" }
 @String{JACM = "J. ACM" }
 @String{ACMMathSoft = "{ACM} Transactions on Mathematical Software" }
 @String{ACMMathSoft = "{ACM} Trans. Math. Software" }
 @String{SIGNUM = "{ACM} {SIGNUM} Newsletter" }
 @String{SIGNUM = "{ACM} {SIGNUM} Newslett." }

 @String{AmerSocio = "American Journal of Sociology" }
 @String{AmerStatAssoc = "Journal of the American Statistical Association" }
 @String{AmerStatAssoc = "J. Amer. Statist. Assoc." }
 @String{ApplMathComp = "Applied Mathematics and Computation" }
 @String{ApplMathComp = "Appl. Math. Comput." }
 @String{AmerMathMonthly = "American Mathematical Monthly" }
 @String{AmerMathMonthly = "Amer. Math. Monthly" }
 @String{BIT = "{BIT}" }
 @String{BritStatPsych = "British Journal of Mathematical and Statistical
          Psychology" }
 @String{BritStatPsych = "Brit. J. Math. Statist. Psych." }
 @String{CanMathBull = "Canadian Mathematical Bulletin" }
 @String{CanMathBull = "Canad. Math. Bull." }
 @String{CompApplMath = "Journal of Computational and Applied Mathematics" }
 @String{CompApplMath = "J. Comput. Appl. Math." }
 @String{CompPhys = "Journal of Computational Physics" }
 @String{CompPhys = "J. Comput. Phys." }
 @String{CompStruct = "Computers and Structures" }
 @String{CompStruct = "Comput. \& Structures" }
 @String{CompJour = "The Computer Journal" }
 @String{CompJour = "Comput. J." }
 @String{CompSysSci = "Journal of Computer and System Sciences" }
 @String{CompSysSci = "J. Comput. System Sci." }
 @String{Computing = "Computing" }
 @String{ContempMath = "Contemporary Mathematics" }
 @String{ContempMath = "Contemp. Math." }
 @String{Crelle = "Crelle's Journal" }
 @String{GiornaleMath = "Giornale di Mathematiche" }
 @String{GiornaleMath = "Giorn. Mat." } % didn't find in AMS MR., ibid.

 %IEEE
 @String{Computer = "{IEEE} Computer" }
 @String{IEEETransComp = "{IEEE} Transactions on Computers" }
 @String{IEEETransComp = "{IEEE} Trans. Comput." }
 @String{IEEETransAC = "{IEEE} Transactions on Automatic Control" }
 @String{IEEETransAC = "{IEEE} Trans. Automat. Control" }
 @String{IEEESpec = "{IEEE} Spectrum" } % didn't find in AMS MR
 @String{ProcIEEE = "Proceedings of the {IEEE}" }
 @String{ProcIEEE = "Proc. {IEEE}" } % didn't find in AMS MR
 @String{IEEETransAeroElec = "{IEEE} Transactions on Aerospace and Electronic
     Systems" }
 @String{IEEETransAeroElec = "{IEEE} Trans. Aerospace Electron. Systems" }

 @String{IMANumerAna = "{IMA} Journal of Numerical Analysis" }
 @String{IMANumerAna = "{IMA} J. Numer. Anal." }
 @String{InfProcLet = "Information Processing Letters" }
 @String{InfProcLet = "Inform. Process. Lett." }
 @String{InstMathApp = "Journal of the Institute of Mathematics and
     its Applications" }
 @String{InstMathApp = "J. Inst. Math. Appl." }
 @String{IntControl = "International Journal of Control" }
 @String{IntControl = "Internat. J. Control" }
 @String{IntNumerEng = "International Journal for Numerical Methods in
     Engineering" }
 @String{IntNumerEng = "Internat. J. Numer. Methods Engrg." }
 @String{IntSuper = "International Journal of Supercomputing Applications" }
 @String{IntSuper = "Internat. J. Supercomputing Applic." } % didn't find
%% in AMS MR
 @String{Kibernetika = "Kibernetika" }
 @String{JResNatBurStand = "Journal of Research of the National Bureau
     of Standards" }
 @String{JResNatBurStand = "J. Res. Nat. Bur. Standards" }
 @String{LinAlgApp = "Linear Algebra and its Applications" }
 @String{LinAlgApp = "Linear Algebra Appl." }
 @String{MathAnaAppl = "Journal of Mathematical Analysis and Applications" }
 @String{MathAnaAppl = "J. Math. Anal. Appl." }
 @String{MathAnnalen = "Mathematische Annalen" }
 @String{MathAnnalen = "Math. Ann." }
 @String{MathPhys = "Journal of Mathematical Physics" }
 @String{MathPhys = "J. Math. Phys." }
 @String{MathComp = "Mathematics of Computation" }
 @String{MathComp = "Math. Comp." }
 @String{MathScand = "Mathematica Scandinavica" }
 @String{MathScand = "Math. Scand." }
 @String{TablesAidsComp = "Mathematical Tables and Other Aids to Computation" }
 @String{TablesAidsComp = "Math. Tables Aids Comput." }
 @String{NumerMath = "Numerische Mathematik" }
 @String{NumerMath = "Numer. Math." }
 @String{PacificMath = "Pacific Journal of Mathematics" }
 @String{PacificMath = "Pacific J. Math." }
 @String{ParDistComp = "Journal of Parallel and Distributed Computing" }
 @String{ParDistComp = "J. Parallel and Distrib. Comput." } % didn't find
%% in AMS MR
 @String{ParComputing = "Parallel Computing" }
 @String{ParComputing = "Parallel Comput." }
 @String{PhilMag = "Philosophical Magazine" }
 @String{PhilMag = "Philos. Mag." }
 @String{ProcNAS = "Proceedings of the National Academy of Sciences
                    of the USA" }
 @String{ProcNAS = "Proc. Nat. Acad. Sci. U. S. A." }
 @String{Psychometrika = "Psychometrika" }
 @String{QuartMath = "Quarterly Journal of Mathematics, Oxford, Series (2)" }
 @String{QuartMath = "Quart. J. Math. Oxford Ser. (2)" }
 @String{QuartApplMath = "Quarterly of Applied Mathematics" }
 @String{QuartApplMath = "Quart. Appl. Math." }
 @String{RevueInstStat = "Review of the International Statisical Institute" }
 @String{RevueInstStat = "Rev. Inst. Internat. Statist." }

 %SIAM
 @String{JSIAM = "Journal of the Society for Industrial and Applied
     Mathematics" }
 @String{JSIAM = "J. Soc. Indust. Appl. Math." }
 @String{JSIAMB = "Journal of the Society for Industrial and Applied
     Mathematics, Series B, Numerical Analysis" }
 @String{JSIAMB = "J. Soc. Indust. Appl. Math. Ser. B Numer. Anal." }
 @String{SIAMAlgMeth = "{SIAM} Journal on Algebraic and Discrete Methods" }
 @String{SIAMAlgMeth = "{SIAM} J. Algebraic Discrete Methods" }
 @String{SIAMAppMath = "{SIAM} Journal on Applied Mathematics" }
 @String{SIAMAppMath = "{SIAM} J. Appl. Math." }
 @String{SIAMComp = "{SIAM} Journal on Computing" }
 @String{SIAMComp = "{SIAM} J. Comput." }
 @String{SIAMMatrix = "{SIAM} Journal on Matrix Analysis and Applications" }
 @String{SIAMMatrix = "{SIAM} J. Matrix Anal. Appl." }
 @String{SIAMNumAnal = "{SIAM} Journal on Numerical Analysis" }
 @String{SIAMNumAnal = "{SIAM} J. Numer. Anal." }
 @String{SIAMReview = "{SIAM} Review" }
 @String{SIAMReview = "{SIAM} Rev." }
 @String{SIAMSciStat = "{SIAM} Journal on Scientific and Statistical
     Computing" }
 @String{SIAMSciStat = "{SIAM} J. Sci. Statist. Comput." }

 @String{SoftPracExp = "Software Practice and Experience" }
 @String{SoftPracExp = "Software Prac. Experience" } % didn't find in AMS MR
 @String{StatScience = "Statistical Science" }
 @String{StatScience = "Statist. Sci." }
 @String{Techno = "Technometrics" }
 @String{USSRCompMathPhys = "{USSR} Computational Mathematics and Mathematical
     Physics" }
 @String{USSRCompMathPhys = "{U. S. S. R.} Comput. Math. and Math. Phys." }
 @String{VLSICompSys = "Journal of {VLSI} and Computer Systems" }
 @String{VLSICompSys = "J. {VLSI} Comput. Syst." }
 @String{ZAngewMathMech = "Zeitschrift fur Angewandte Mathematik und
     Mechanik" }
 @String{ZAngewMathMech = "Z. Angew. Math. Mech." }
 @String{ZAngewMathPhys = "Zeitschrift fur Angewandte Mathematik und Physik" }
 @String{ZAngewMathPhys = "Z. Angew. Math. Phys." }

% Publishers % ================================================= |

 @String{Academic = "Academic Press" }
 @String{ACMPress = "{ACM} Press" }
 @String{AdamHilger = "Adam Hilger" }
 @String{AddisonWesley = "Addison-Wesley" }
 @String{AllynBacon = "Allyn and Bacon" }
 @String{AMS = "American Mathematical Society" }
 @String{Birkhauser = "Birkha{\"u}ser" }
 @String{CambridgePress = "Cambridge University Press" }
 @String{Chelsea = "Chelsea" }
 @String{ClaredonPress = "Claredon Press" }
 @String{DoverPub = "Dover Publications" }
 @String{Eyolles = "Eyolles" }
 @String{HoltRinehartWinston = "Holt, Rinehart and Winston" }
 @String{Interscience = "Interscience" }
 @String{JohnsHopkinsPress = "The Johns Hopkins University Press" }
 @String{JohnWileySons = "John Wiley and Sons" }
 @String{Macmillan = "Macmillan" }
 @String{MathWorks = "The Math Works Inc." }
 @String{McGrawHill = "McGraw-Hill" }
 @String{NatBurStd = "National Bureau of Standards" }
 @String{NorthHolland = "North-Holland" }
 @String{OxfordPress = "Oxford University Press" }  %address Oxford or London?
 @String{PergamonPress = "Pergamon Press" }
 @String{PlenumPress = "Plenum Press" }
 @String{PrenticeHall = "Prentice-Hall" }
 @String{SIAMPub = "{SIAM} Publications" }
 @String{Springer = "Springer-Verlag" }
 @String{TexasPress = "University of Texas Press" }
 @String{VanNostrand = "Van Nostrand" }
 @String{WHFreeman = "W. H. Freeman and Co." }

%Entries

@article{almeida2018DeltaCRDT,
  title = {Delta {{State Replicated Data Types}}},
  shorttitle = {{{DeltaCRDT}}},
  author = {Almeida, Paulo S{\'e}rgio and Shoker, Ali and Baquero, Carlos},
  year = {2018},
  month = jan,
  journal = {Journal of Parallel and Distributed Computing},
  volume = {111},
  eprint = {1603.01529},
  primaryclass = {cs},
  pages = {162--173},
  issn = {07437315},
  doi = {10.1016/j.jpdc.2017.08.003},
  urldate = {2023-03-06},
  abstract = {CRDTs are distributed data types that make eventual consistency of a distributed object possible and non ad-hoc. Specifically, state-based CRDTs ensure convergence through disseminating the entire state, that may be large, and merging it to other replicas; whereas operation-based CRDTs disseminate operations (i.e., small states) assuming an exactly-once reliable dissemination layer. We introduce Delta State Conflict-Free Replicated Data Types ({$\delta$}-CRDT) that can achieve the best of both worlds: small messages with an incremental nature, as in operation-based CRDTs, disseminated over unreliable communication channels, as in traditional state-based CRDTs. This is achieved by defining {$\delta$}-mutators to return a delta-state, typically with a much smaller size than the full state, that to be joined with both local and remote states. We introduce the {$\delta$}-CRDT framework, and we explain it through establishing a correspondence to current state-based CRDTs. In addition, we present an anti-entropy algorithm for eventual convergence, and another one that ensures causal consistency. Finally, we introduce several {$\delta$}-CRDT specifications of both well-known replicated datatypes and novel datatypes, including a generic map composition.},
  archiveprefix = {arxiv},
  langid = {english},
  keywords = {Computer Science - Distributed; Parallel; and Cluster Computing},
  file = {/Users/vincent/Zotero/storage/84KMH74N/Almeida et al. - 2018 - Delta State Replicated Data Types.pdf}
}

@inproceedings{balegas2015Indigo,
  title = {Putting Consistency Back into Eventual Consistency},
  shorttitle = {Indigo},
  booktitle = {Proceedings of the {{Tenth European Conference}} on {{Computer Systems}}},
  author = {Balegas, Valter and Duarte, S{\'e}rgio and Ferreira, Carla and Rodrigues, Rodrigo and Pregui{\c c}a, Nuno and Najafzadeh, Mahsa and Shapiro, Marc},
  year = {2015},
  month = apr,
  series = {{{EuroSys}} '15},
  pages = {1--16},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/2741948.2741972},
  urldate = {2023-03-21},
  abstract = {Geo-replicated storage systems are at the core of current Internet services. The designers of the replication protocols used by these systems must choose between either supporting low-latency, eventually-consistent operations, or ensuring strong consistency to ease application correctness. We propose an alternative consistency model, Explicit Consistency, that strengthens eventual consistency with a guarantee to preserve specific invariants defined by the applications. Given these application-specific invariants, a system that supports Explicit Consistency identifies which operations would be unsafe under concurrent execution, and allows programmers to select either violation-avoidance or invariant-repair techniques. We show how to achieve the former, while allowing operations to complete locally in the common case, by relying on a reservation system that moves coordination off the critical path of operation execution. The latter, in turn, allows operations to execute without restriction, and restore invariants by applying a repair operation to the database state. We present the design and evaluation of Indigo, a middleware that provides Explicit Consistency on top of a causally-consistent data store. Indigo guarantees strong application invariants while providing similar latency to an eventually-consistent system in the common case.},
  isbn = {978-1-4503-3238-5},
  file = {/Users/vincent/Zotero/storage/HWTEAQ7A/Balegas et al. - 2015 - Putting consistency back into eventual consistency.pdf}
}

@inproceedings{baquero2014PureOp,
  title = {Making Operation-Based {{CRDTs}} Operation-Based},
  shorttitle = {{{PureOp}}},
  booktitle = {Proceedings of the {{First Workshop}} on {{Principles}} and {{Practice}} of {{Eventual Consistency}}},
  author = {Baquero, Carlos and Almeida, Paulo S{\'e}rgio and Shoker, Ali},
  year = {2014},
  month = apr,
  series = {{{PaPEC}} '14},
  pages = {1--2},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/2596631.2596632},
  urldate = {2023-03-06},
  abstract = {Conflict-free Replicated Datatypes can simplify the design of predictable eventual consistency. They can be classified into state-based or operation-based. Operation-based approaches have the potential for allowing compact designs in both the sent message and the object state size, but current approaches are still far from this objective. Here we explore the design space for operation-based solutions, and we leverage the interaction with the middleware by offering a technique that delivers very compact solutions, while only broadcasting operation names and arguments.},
  isbn = {978-1-4503-2716-9},
  keywords = {eventual consistency,operation-based CRDTs},
  file = {/Users/vincent/Zotero/storage/BM8I6GA9/Baquero et al. - 2014 - Making operation-based CRDTs operation-based.pdf}
}

@misc{baquero2017PureOp,
  title = {Pure {{Operation-Based Replicated Data Types}}},
  shorttitle = {{{PureOp}}},
  author = {Baquero, Carlos and Almeida, Paulo Sergio and Shoker, Ali},
  year = {2017},
  month = oct,
  number = {arXiv:1710.04469},
  eprint = {arXiv:1710.04469},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.1710.04469},
  urldate = {2023-03-06},
  abstract = {Distributed systems designed to serve clients across the world often make use of geo-replication to attain low latency and high availability. Conflict-free Replicated Data Types (CRDTs) allow the design of predictable multi-master replication and support eventual consistency of replicas that are allowed to transiently diverge. CRDTs come in two flavors: state-based, where a state is changed locally and shipped and merged into other replicas; operation-based, where operations are issued locally and reliably causal broadcast to all other replicas. However, the standard definition of op-based CRDTs is very encompassing, allowing even sending the full-state, and thus imposing storage and dissemination overheads as well as blurring the distinction from state-based CRDTs. We introduce pure op-based CRDTs, that can only send operations to other replicas, drawing a clear distinction from state-based ones. Data types with commutative operations can be trivially implemented as pure op-based CRDTs using standard reliable causal delivery; whereas data types having non-commutative operations are implemented using a PO-Log, a partially ordered log of operations, and making use of an extended API, i.e., a Tagged Causal Stable Broadcast (TCSB), that provides extra causality information upon delivery and later informs when delivered messages become causally stable, allowing further PO-Log compaction. The framework is illustrated by a catalog of pure op-based specifications for classic CRDTs, including counters, multi-value registers, add-wins and remove-wins sets.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Data Structures and Algorithms,Computer Science - Databases,Computer Science - Distributed; Parallel; and Cluster Computing},
  file = {/Users/vincent/Zotero/storage/JWUX5DYQ/Baquero et al. - 2017 - Pure Operation-Based Replicated Data Types.pdf;/Users/vincent/Zotero/storage/D3G8DZQI/1710.html}
}

@inproceedings{bauwens2021Reactivity,
  title = {Improving the {{Reactivity}} of {{Pure Operation-Based CRDTs}}},
  shorttitle = {Reactivity},
  booktitle = {Proceedings of the 8th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Bauwens, Jim and Boix, Elisa Gonzalez},
  year = {2021},
  month = apr,
  pages = {1--6},
  publisher = {{ACM}},
  address = {{Online United Kingdom}},
  doi = {10.1145/3447865.3457968},
  urldate = {2023-03-06},
  abstract = {Modern distributed applications increasingly replicate data to guarantee both high availability of the system and an optimal user experience. Conflict-Free Replicated Data Types (CRDTs) are a family of data types specially designed for highly available systems which guarantee some form of eventual consistency. In this paper, we show that the reliance on reliable causal broadcasting (RCB) middleware by existing CRDT frameworks may lead to less reactive CRDTs which in turn hampers user experience. We propose a solution that improves the reactivity of CRDTs built on an RCB middleware by reifying buffered operations. We apply our strategy to the pure operation-based CRDT framework, allowing for reactive pure operation-based CRDTs. We describe our approach as a formal extension to the framework and implement it in Flec, an extensible and open CRDT framework. The extension is then used to create new Add-Wins and Remove-Wins sets which exhibit higher reactivity.},
  isbn = {978-1-4503-8338-7},
  langid = {english},
  annotation = {1 citations (Crossref) [2023-03-21]},
  file = {/Users/vincent/Zotero/storage/DHWHM3JE/Bauwens and Boix - 2021 - Improving the Reactivity of Pure Operation-Based C.pdf}
}

@article{bieniusa2012ORSWOT,
  title = {An Optimized Conflict-Free Replicated Set},
  shorttitle = {{{ORSWOT}}},
  author = {Bieniusa, Annette and Zawirski, Marek and Pregui{\c c}a, Nuno and Shapiro, Marc and Baquero, Carlos and Balegas, Valter and Duarte, S{\'e}rgio},
  year = {2012},
  month = oct,
  abstract = {Eventual consistency of replicated data supports concurrent updates, reduces latency and improves fault tolerance, but forgoes strong consistency. Accordingly, several cloud computing platforms implement eventually-consistent data types. The set is a widespread and useful abstraction, and many replicated set designs have been proposed. We present a reasoning abstraction, permutation equivalence, that systematizes the characterization of the expected concurrency semantics of concurrent types. Under this framework we present one of the existing conflict-free replicated data types, Observed-Remove Set. Furthermore, in order to decrease the size of meta-data, we propose a new optimization to avoid tombstones. This approach that can be transposed to other data types, such as maps, graphs or sequences.},
  file = {/Users/vincent/Zotero/storage/AN8CPIYQ/Bieniusa et al_2012_An optimized conflict-free replicated set.pdf}
}

@inproceedings{brown2016Biggersets,
  title = {Big(Ger) Sets: Decomposed Delta {{CRDT}} Sets in {{Riak}}},
  shorttitle = {Big(Ger) Sets},
  booktitle = {Proceedings of the 2nd {{Workshop}} on the {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Brown, Russell and Lakhani, Zeeshan and Place, Paul},
  year = {2016},
  month = apr,
  pages = {1--5},
  publisher = {{ACM}},
  address = {{London United Kingdom}},
  doi = {10.1145/2911151.2911156},
  urldate = {2023-03-06},
  abstract = {CRDT[24] Sets as implemented in Riak[6] perform poorly for writes, both as cardinality grows, and for sets larger than 500KB[25]. Riak users wish to create high cardinality CRDT sets, and expect better than O(n) performance for individual insert and remove operations. By decomposing a CRDT set on disk, and employing delta-replication[2], we can achieve far better performance than just delta replication alone: relative to the size of causal metadata, not the cardinality of the set, and we can support sets that are 100s times the size of Riak sets, while still providing the same level of consistency. There is a trade-off in read performance but we expect it is mitigated by enabling queries on sets.},
  isbn = {978-1-4503-4296-4},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/Q7XKMLLS/Brown et al. - 2016 - Big(ger) sets decomposed delta CRDT sets in Riak.pdf}
}

@article{decandia2007Dynamo,
  title = {Dynamo: Amazon's Highly Available Key-Value Store},
  shorttitle = {Dynamo},
  author = {DeCandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
  year = {2007},
  month = oct,
  journal = {ACM SIGOPS Operating Systems Review},
  volume = {41},
  number = {6},
  pages = {205--220},
  issn = {0163-5980},
  doi = {10.1145/1323293.1294281},
  urldate = {2023-03-17},
  abstract = {Reliability at massive scale is one of the biggest challenges we face at Amazon.com, one of the largest e-commerce operations in the world; even the slightest outage has significant financial consequences and impacts customer trust. The Amazon.com platform, which provides services for many web sites worldwide, is implemented on top of an infrastructure of tens of thousands of servers and network components located in many datacenters around the world. At this scale, small and large components fail continuously and the way persistent state is managed in the face of these failures drives the reliability and scalability of the software systems. This paper presents the design and implementation of Dynamo, a highly available key-value storage system that some of Amazon's core services use to provide an "always-on" experience. To achieve this level of availability, Dynamo sacrifices consistency under certain failure scenarios. It makes extensive use of object versioning and application-assisted conflict resolution in a manner that provides a novel interface for developers to use.},
  keywords = {performance,reliability,scalability},
  annotation = {921 citations (Crossref) [2023-03-21]},
  file = {/Users/vincent/Zotero/storage/4B665J4F/DeCandia et al. - 2007 - Dynamo amazon's highly available key-value store.pdf}
}

@inproceedings{elhemali2022AmazonDynamoDB,
  title = {Amazon \{\vphantom\}{{DynamoDB}}\vphantom\{\}: {{A Scalable}}, {{Predictably Performant}}, and {{Fully Managed}} \{\vphantom\}{{NoSQL}}\vphantom\{\} {{Database Service}}},
  shorttitle = {Amazon \{\vphantom\}{{DynamoDB}}\vphantom\{\}},
  booktitle = {2022 {{USENIX Annual Technical Conference}} ({{USENIX ATC}} 22)},
  author = {Elhemali, Mostafa and Gallagher, Niall and Gordon, Nick and Idziorek, Joseph and Krog, Richard and Lazier, Colin and Mo, Erben and Mritunjai, Akhilesh and Perianayagam, Somasundaram and Rath, Tim and Sivasubramanian, Swami and Iii, James Christopher Sorenson and Sosothikul, Sroaj and Terry, Doug and Vig, Akshat},
  year = {2022},
  pages = {1037--1048},
  urldate = {2023-04-09},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/BIR9XKE8/Elhemali et al_2022_Amazon DynamoDB .pdf}
}

@inproceedings{enes2019EfficientState,
  title = {Efficient {{Synchronization}} of {{State-Based CRDTs}}},
  shorttitle = {{{EfficientState}}},
  booktitle = {2019 {{IEEE}} 35th {{International Conference}} on {{Data Engineering}} ({{ICDE}})},
  author = {Enes, Vitor and Almeida, Paulo Sergio and Baquero, Carlos and Leitao, Joao},
  year = {2019},
  month = apr,
  pages = {148--159},
  publisher = {{IEEE}},
  address = {{Macao, Macao}},
  doi = {10.1109/ICDE.2019.00022},
  urldate = {2023-03-06},
  abstract = {To ensure high availability in large scale distributed systems, Conflict-free Replicated Data Types (CRDTs) relax consistency by allowing immediate query and update operations at the local replica, with no need for remote synchronization. State-based CRDTs synchronize replicas by periodically sending their full state to other replicas, which can become extremely costly as the CRDT state grows. Delta-based CRDTs address this problem by producing small incremental states (deltas) to be used in synchronization instead of the full state. However, current synchronization algorithms for delta-based CRDTs induce redundant wasteful delta propagation, performing worse than expected, and surprisingly, no better than state-based. In this paper we: 1) identify two sources of inefficiency in current synchronization algorithms for delta-based CRDTs; 2) bring the concept of join decomposition to state-based CRDTs; 3) exploit join decompositions to obtain optimal deltas and 4) improve the efficiency of synchronization algorithms; and finally, 5) experimentally evaluate the improved algorithms.},
  isbn = {978-1-5386-7474-1},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/8XGFVCFY/Enes et al. - 2019 - Efficient Synchronization of State-Based CRDTs.pdf}
}

@article{jannes2021OWebSync,
  title = {{{OWebSync}}: {{Seamless Synchronization}} of {{Distributed Web Clients}}},
  shorttitle = {{{OWebSync}}},
  author = {Jannes, Kristof and Lagaisse, Bert and Joosen, Wouter},
  year = {2021},
  month = mar,
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  volume = {32},
  number = {9},
  pages = {2338--2351},
  issn = {1558-2183},
  doi = {10.1109/TPDS.2021.3066276},
  abstract = {Many enterprise software services are adopting a fully web-based architecture for both internal line-of-business applications and for online customer-facing applications. Although wireless connections are becoming more ubiquitous and faster, mobile employees and customers are often offline due to expected or unexpected network disruptions. Nevertheless, continuous operation of the software is expected. This article presents OWebSync: a web-based middleware for data synchronization in interactive groupware with fast resynchronization of offline clients and continuous, interactive synchronization of online clients. To automatically resolve conflicts, OWebSync implements a fine-grained data synchronization model and leverages state-based Conflict-free Replicated Data Types. This middleware uses Merkle-trees embedded in the tree-structured data and virtual Merkle-tree levels to achieve the required interactive performance. Our comparative evaluation with available operation-based and delta-state-based middleware solutions shows that OWebSync is especially better in operating in and recovering from offline settings and network disruptions. In addition, OWebSync scales more efficiently over time, as it does not store version vectors or other meta-data for all past clients.},
  keywords = {Clocks,Collaborative software,Companies,CRDTs,eventual consistency,groupware,Metadata,Middleware,Servers,Synchronization,web browsers},
  file = {/Users/vincent/Zotero/storage/9BV4LPSG/Jannes et al. - 2021 - OWebSync Seamless Synchronization of Distributed .pdf;/Users/vincent/Zotero/storage/F3WQUQI5/9380486.html}
}

@inproceedings{mehdi2017,
  title = {I \{\vphantom\}{{Can}}'t\vphantom\{\} {{Believe}} \{\vphantom\}{{It}}'s\vphantom\{\} {{Not Causal}}! {{Scalable Causal Consistency}} with {{No Slowdown Cascades}}},
  booktitle = {14th {{USENIX Symposium}} on {{Networked Systems Design}} and {{Implementation}} ({{NSDI}} 17)},
  author = {Mehdi, Syed Akbar and Littley, Cody and Crooks, Natacha and Alvisi, Lorenzo and Bronson, Nathan and Lloyd, Wyatt},
  year = {2017},
  pages = {453--468},
  urldate = {2023-03-06},
  isbn = {978-1-931971-37-9},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/YJ8X3HKN/Mehdi et al. - 2017 - I Can’t Believe It’s Not Causal! Scalable Caus.pdf}
}

@inproceedings{nicolas2020RenameCRDT,
  title = {Efficient Renaming in Sequence {{CRDTs}}},
  shorttitle = {{{RenameCRDT}}},
  booktitle = {Proceedings of the 7th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Nicolas, Matthieu and Oster, G{\'e}rald and Perrin, Olivier},
  year = {2020},
  month = apr,
  series = {{{PaPoC}} '20},
  pages = {1--8},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3380787.3393682},
  urldate = {2023-03-20},
  abstract = {To achieve high availability, large-scale distributed systems have to replicate data and to minimise coordination between nodes. Literature and industry increasingly adopt Conflictfree Replicated Data Types (CRDTs) to design such systems. CRDTs are data types which behave as traditional ones, e.g. the Set or the Sequence. However, unlike traditional data types, they are designed to natively support concurrent modifications. To this end, they embed in their specification a conflict-resolution mechanism. To resolve conflicts in a deterministic manner, CRDTs usually attach identifiers to elements stored in the data structure. Identifiers have to comply with several constraints, such as uniqueness or belonging to a dense order. These constraints may hinder the identifiers' size from being bounded. As the system progresses, identifiers tend to grow. This inflation deepens the overhead of the CRDT over time, leading to performance issues. To address this issue, we propose a new CRDT for Sequence which embeds a renaming mechanism. It enables nodes to reassign shorter identifiers to elements in an uncoordinated manner. Experimental results demonstrate that this mechanism decreases the overhead of the replicated data structure and eventually limits it.},
  isbn = {978-1-4503-7524-5},
  keywords = {CRDTs,eventual consistency,memory-wise optimisation,performance,real-time collaborative editing},
  file = {/Users/vincent/Zotero/storage/EUNWBC65/Nicolas et al. - 2020 - Efficient renaming in sequence CRDTs.pdf}
}

@article{nieto2022ModularVeri,
  title = {Modular Verification of Op-Based {{CRDTs}} in Separation Logic},
  shorttitle = {{{ModularVeri}}},
  author = {Nieto, Abel and Gondelman, L{\'e}on and Reynaud, Alban and Timany, Amin and Birkedal, Lars},
  year = {2022},
  month = oct,
  journal = {Proceedings of the ACM on Programming Languages},
  volume = {6},
  number = {OOPSLA2},
  pages = {188:1788--188:1816},
  doi = {10.1145/3563351},
  urldate = {2023-03-21},
  abstract = {Operation-based Conflict-free Replicated Data Types (op-based CRDTs) are a family of distributed data structures where all operations are designed to commute, so that replica states eventually converge. Additionally, op-based CRDTs require that operations be propagated between replicas in causal order. This paper presents a framework for verifying safety properties of CRDT implementations using separation logic. The framework consists of two libraries. One implements a Reliable Causal Broadcast (RCB) protocol so that replicas can exchange messages in causal order. A second ``OpLib'' library then uses RCB to simplify the creation and correctness proofs of op-based CRDTs. OpLib allows clients to implement new CRDTs as purely-functional data structures, without having to reason about network operations, concurrency control and mutable state, and without having to each time re-implement causal broadcast. Using OpLib, we have implemented 12 example CRDTs from the literature, including multiple versions of replicated registers and sets, two CRDT combinators for products and maps, and two example use cases of the map combinator. Our proofs are conducted in the Aneris distributed separation logic and are formalized in Coq. Our technique is the first work on verification of op-based CRDTs that satisfies both of the following properties: it is modular and targets executable implementations, as opposed to high-level protocols.},
  keywords = {causal broadcast,CRDT,distributed systems,formal verification,replicated data type,separation logic},
  file = {/Users/vincent/Zotero/storage/3TFUUNPR/Nieto et al. - 2022 - Modular verification of op-based CRDTs in separati.pdf}
}

@inproceedings{preguica2014SwiftCloud,
  title = {{{SwiftCloud}}: Fault-Tolerant Geo-Replication Integrated All the Way to the Client Machine},
  shorttitle = {{{SwiftCloud}}},
  booktitle = {2014 {{IEEE}} 33rd {{International Symposium}} on {{Reliable Distributed Systems Workshops}}},
  author = {Preguica, Nuno and Zawirski, Marek and Bieniusa, Annette and Duarte, Sergio and Balegas, Valter and Baquero, Carlos and Shapiro, Marc},
  year = {2014},
  month = oct,
  pages = {30--33},
  publisher = {{IEEE}},
  address = {{Nara, Japan}},
  doi = {10.1109/SRDSW.2014.33},
  urldate = {2023-03-06},
  abstract = {Client-side logic and storage are increasingly used in web and mobile applications to improve response time and availability. Current approaches tend to be ad-hoc and poorly integrated with the server-side logic. We present a principled approach to integrate client- and server-side storage. We support mergeable and strongly consistent transactions that target either client or server replicas and provide access to causally-consistent snapshots efficiently. In the presence of infrastructure faults, a client-assisted failover solution allows client execution to resume immediately and seamlessly access consistent snapshots without waiting. We implement this approach in SwiftCloud, the first transactional system to bring geo-replication all the way to the client machine.},
  isbn = {978-1-4799-7361-3},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/Z5YN9SR2/Preguica et al. - 2014 - SwiftCloud Fault-Tolerant Geo-Replication Integra.pdf}
}

@misc{preguica2018CRDT,
  title = {Conflict-Free {{Replicated Data Types}}: {{An Overview}}},
  shorttitle = {{{CRDT}}},
  author = {Pregui{\c c}a, Nuno},
  year = {2018},
  month = jun,
  number = {arXiv:1806.10254},
  eprint = {arXiv:1806.10254},
  publisher = {{arXiv}},
  urldate = {2023-03-06},
  abstract = {Internet-scale distributed systems often replicate data at multiple geographic locations to provide low latency and high availability, despite node and network failures. Geo-replicated systems that adopt a weak consistency model allow replicas to temporarily diverge, requiring a mechanism for merging concurrent updates into a common state. Conflict-free Replicated Data Types (CRDT) provide a principled approach to address this problem. This document presents an overview of Conflict-free Replicated Data Types research and practice, organizing the presentation in the aspects relevant for the application developer, the system developer and the CRDT developer.},
  archiveprefix = {arxiv},
  langid = {english},
  keywords = {Computer Science - Data Structures and Algorithms,Computer Science - Distributed; Parallel; and Cluster Computing},
  file = {/Users/vincent/Zotero/storage/SAJ2BGQ4/Preguiça - 2018 - Conflict-free Replicated Data Types An Overview.pdf}
}

@inproceedings{simic2020CRDTstrategy,
  title = {{{CRDTs}} as Replication Strategy in Large-Scale Edge Distributed System: {{An}} Overview},
  shorttitle = {{{CRDT}} Strategy},
  author = {Simi{\'c}, Milo{\v s} and Stojkov, Milan and Sladic, Goran and Milosavljevi{\'c}, Branko},
  year = {2020},
  month = jul,
  abstract = {Replication is one of the most important parts of any distributed system. It is mainly used to provide fault-tolerant and robust systems. Data is copied on a few different machines, and often in several regions to ensure that loss of a single machine, cluster or even region does not affect the overall quality of the service given to users. Over several decades both academia and the industry developed few techniques on how to manage these tasks. These techniques usually involve some sort of expensive synchronization or consensus to ensure replication is done properly. Conflict free replicated data types or CRDTs, do not use consensus, but a set of strong mathematical rules and they are guaranteed to converge eventually if all concurrent updates are commutative. Expensive synchronization or consensus might be a problem with resource-limited devices. In this paper, we present a review of CRDTs, it's benefits and shortcomings in the domain of the large scale edge computing systems with constant data flow with processing on the very edge of the network. We provide answers to questions is this technique applicable as a data replication strategy in systems with limited hardware capabilities, and could we retain or improve availability and reduce the latency of the system, but at the same time avoid expensive synchronization and consensus-based approach, which could be problematic due to the nature of edge computing. I. I NTRODUCTION Nowadays, we are facing a massive movement in processing away from the standard, centralized computing model that is provided through the cloud computing paradigm, especially in the domain of Internet of Things (IoT) where we have a lot of sensors that are constantly sensing some events. This movement returns the distribution of computing power and logic to the edge of the network. Edge network is the idea of connecting sensors to programmable automation controllers (PAC) which can then handle processing, storage, and communication. The basic concept of edge computing is to leverage new generation technologies, processes, services, and applications that are built to take advantage of this new infrastructure. The key difference with this model is that it operates and it is deployed on computing hardware closer to the edge of the network. Thus, it is bringing the cloud computing model closer to the ground. With the architecture of large scale distributed edge devices [1], we also need to consider how to manage data replication on those devices to ensure resilience, consistency, and fault tolerance. Replication is a standard and must-have in any large-scale distributed systems and the cloud as well [2][3]. We can investigate, are the same strategies and techniques applicable in this new architecture? Can their properties benefit the edge computing model? Or we might need to consider new research breakthroughs in replication areas and embed them in the edge computing model? In the large distributed systems such as the world wide web, peer-to-peer networks, or even cloud computing platforms, replication and consistency are essential features. They are mainly used to provide fault tolerance and data consistency. Data replication is a process that usually relies on expensive synchronization or some consensus protocol that runs in between replicas. When the majority of those replicas store a copy of the data, only then we can proceed with the response. Two replication strategies have been used in distributed systems: 1) active replication where each client request is processed by all the servers and 2) passive replication where only one server at the time processes client requests. After processing a request, the primary server updates the state on the other servers and sends back the response to the client. In traditional datacenters when talking about replication, we are usually thinking about strong consistency, and two-phase commit [2] is a commonly used algorithm. The strong consistency approach provides us a guarantee by serializing updates to the replicas in global total order. The downside of the strong consistency is that it is a performance and scalability bottleneck, and it also conflicts with availability and partition-tolerance due to the CAP theorem [3][4]. Strong consistency requires more network hops to ensure agreement. The application using such a system will not be able to read the data before the last operation. When network delays are large or partitioning is an issue as in delay-tolerant networks, disconnected operation, cloud computing, or peer-to-peer systems, the eventual consistency model promises higher availability and better},
  file = {/Users/vincent/Zotero/storage/2X4G98KY/Simić et al. - 2020 - CRDTs as replication strategy in large-scale edge .pdf}
}

@inproceedings{vanderlinde2016delta-CRDTs,
  title = {{$\Delta$}-{{CRDTs}}: Making {$\delta$}-{{CRDTs}} Delta-Based},
  shorttitle = {Delta-{{CRDTs}}},
  booktitle = {Proceedings of the 2nd {{Workshop}} on the {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {{van der Linde}, Albert and Leit{\~a}o, Jo{\~a}o and Pregui{\c c}a, Nuno},
  year = {2016},
  month = apr,
  pages = {1--4},
  publisher = {{ACM}},
  address = {{London United Kingdom}},
  doi = {10.1145/2911151.2911163},
  urldate = {2023-03-06},
  abstract = {Replication is a key technique for providing both fault tolerance and availability in distributed systems. However, managing replicated state, and ensuring that these replicas remain consistent, is a non trivial task, in particular in scenarios where replicas can reside on the client-side, as clients might have unreliable communication channels and hence, exhibit highly dynamic communication patterns. One way to simplify this task is to resort to CRDTs, which are data types that enable replication and operation over replicas with no coordination, ensuring eventual state convergence when these replicas are synchronized. However, when the communication patters, and therefore synchronization patterns, are highly dynamic, existing designs of CRDTs might incur in excessive communication overhead. To address those scenarios, in this paper we propose a new design for CRDTs which we call -CRDT, and experimentally show that under dynamic communication patters, this novel design achieves better network utilization than existing alternatives.},
  isbn = {978-1-4503-4296-4},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/4QJSJ5E5/van der Linde et al. - 2016 - Δ-CRDTs making δ-CRDTs delta-based.pdf}
}

@inproceedings{yu2020CausalLen,
  title = {A Low-Cost Set {{CRDT}} Based on Causal Lengths},
  shorttitle = {{{CausalLen}}},
  booktitle = {Proceedings of the 7th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Yu, Weihai and Rostad, Sigbj{\o}rn},
  year = {2020},
  month = apr,
  series = {{{PaPoC}} '20},
  pages = {1--6},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3380787.3393678},
  urldate = {2023-03-21},
  abstract = {CRDTs, or Conflict-free Replicated Data Types, are data abstractions that guarantee convergence for replicated data. Set is one of the most fundamental and widely used data types. Existing general-purpose set CRDTs associate every element in the set with causal contexts as meta data. Manipulation of causal contexts can be complicated and costly. We present a new set CRDT, CLSet (causal-length set), where the meta data associated with an element is simply a natural number (called causal length). We compare CLSet with existing general purpose CRDTs in terms of semantics and performance.},
  isbn = {978-1-4503-7524-5},
  keywords = {availability,eventual consistency,replication,state-based CRDT},
  file = {/Users/vincent/Zotero/storage/CG33VQQZ/Yu and Rostad - 2020 - A low-cost set CRDT based on causal lengths.pdf}
}



@book{hebert2013LYSE,
  title = {Learn You Some {{Erlang}} for Great Good!: A Beginner's Guide},
  shorttitle = {{{LYSE}}},
  author = {H{\'e}bert, Fred},
  year = {2013},
  publisher = {{No Starch Press}},
  address = {{San Francisco}},
  abstract = {Erlang is a functional programming language used by high paying companies such as Facebook and Amazon. Erlang is growing in popularity because it uniquely allows programmers to manage and modify running code live, thereby avoiding costly downtime. Erlang is also one of the few languages designed for concurrency, meaning it takes full advantage of all the processors in a single machine, or multiple machines connected in a cluster. In the spirit of Learn You a Haskell for Great Good!, Learn You Some Erlang for Great Good! is the highly anticipated book version of author Fred Hebert's extremely},
  isbn = {978-1-59327-504-4},
  langid = {english},
  annotation = {OCLC: 828735213}
}

@misc{uwiger:unsplit, 
  title={Uwiger/Unsplit: Resolves conflicts in Mnesia after network splits}, 
  url={https://github.com/uwiger/unsplit}, 
  journal={GitHub}, 
  author={Ulf, Wiger},
  year={2022},
  month={Oct},
  note={Retrieved: 2022-10-25}
} 

@misc{uwiger:mnesia_rocksdb,
  title={Mnesia Rocksdb - Rocksdb backend plugin for Mnesia}, 
  url={https://github.com/aeternity/mnesia_rocksdb}, 
  journal={GitHub}, 
  author={{Klarna AB}},
  year={2022},
  month={Oct},
  note={Retrieved: 2022-12-14}
}



@inproceedings{sun:ot_1998,
  author = {Sun, Chengzheng and Ellis, Clarence},
  title = {Operational Transformation in Real-Time Group Editors: Issues, Algorithms, and Achievements},
  year = {1998},
  isbn = {1581130090},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/289444.289469},
  doi = {10.1145/289444.289469},
  booktitle = {Proceedings of the 1998 ACM Conference on Computer Supported Cooperative Work},
  pages = {59–68},
  numpages = {10},
  keywords = {distributed computing, convergence, consistency maintenance, operational transformation, intention preservation, causality preservation, groupware, group editors},
  location = {Seattle, Washington, USA},
  series = {CSCW '98}
}

@misc{shukla:azure_2018, 
  title={Azure cosmos DB: Pushing the frontier of globally distributed databases}, 
  url={https://azure.microsoft.com/en-us/blog/azure-cosmos-db-pushing-the-frontier-of-globally-distributed-databases/}, 
  journal={Azure Blog and Updates | Microsoft Azure}, 
  author={Shukla, Dharma}, 
  year={2018}, 
  month={Sep},
  note={Retrieved: 2022-10-25}
} 

@misc{cesarini:companies_erlang,
  author={Cesarini,Francesco},
  title={Which companies are using Erlang, and why?},
  year={2019},
  month=Sep,
  day={11},
  url={https://www.erlang-solutions.com/blog/which-companies-are-using-erlang-and-why.html}
}


@book{davey_priestley_2002, 
place={Cambridge}, 
edition={2}, 
title={Introduction to Lattices and Order}, 
DOI={10.1017/CBO9780511809088}, 
publisher={Cambridge University Press}, 
author={Davey, B. A. and Priestley, H. A.}, 
year={2002}}

@misc{cassandra:arch,
  author={{Apache Software Foundation}},
  title={Apache Cassandra Architecture},
  year={2023},
  month=Feb,
  url={https://cassandra.apache.org/doc/latest/architecture/index.html},
  note={Version 4.1}
}

@misc{ellis2013cassandravector,
  title = {Why {{Cassandra Doesn}}'t {{Need Vector Clocks}}},
  shorttitle = {Cassandra Vector},
  author = {Ellis, Jonathan},
  year = {2013},
  month = sep,
  journal = {DataStax},
  urldate = {2023-04-29},
  abstract = {Read the latest announcements, product updates, community activities and more. Subscribe now to the DataStax blog!},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/BZBXEP3M/why-cassandra-doesnt-need-vector-clocks.html}
}


@article{guidec2023opportunistic,
  title = {Supporting Conflict-Free Replicated Data Types in Opportunistic Networks},
  shorttitle = {Opportunistic},
  author = {Guidec, Fr{\'e}d{\'e}ric and Mah{\'e}o, Yves and No{\^u}s, Camille},
  year = {2023},
  month = jan,
  journal = {Peer-to-Peer Networking and Applications},
  volume = {16},
  number = {1},
  pages = {395--419},
  issn = {1936-6450},
  doi = {10.1007/s12083-022-01404-6},
  urldate = {2023-04-24},
  abstract = {Conflict-Free Replicated Data Types (CRDTs) are data types that can be used in distributed systems when optimistic replication is tolerable. Replicas can be updated locally, without coordination, and consistency is obtained eventually by asynchronously propagating updates among replicas. Because CRDTs can tolerate asynchronous transmissions, they can serve as software elements in opportunistic networks (OppNets), where the dissemination of information is dependent on unplanned transient radio contacts between mobile nodes. In this paper we investigate the problem of implementing operation-based, state-based, and delta-state-based CRDTs in OppNets. A contact-driven synchronization algorithm is proposed for each kind of CRDT, and experiments based on realistic tracesets are conducted in order to compare how these algorithms can perform in an OppNet. Experimental results show that delta-state-based CRDTs globally outperforms operation-based and pure state-based CRDTs, especially when considering the number of messages required to ensure the synchronization of replicas.},
  langid = {english},
  keywords = {Ad hoc networks,CRDT,Opportunistic networking,Optimistic replication},
  file = {/Users/vincent/Zotero/storage/4JKY6JV2/Guidec et al_2023_Supporting conflict-free replicated data types in opportunistic networks.pdf}
}


@misc{rabbitmq2022inet_tcp_proxy,
  title = {Inet\_tcp\_proxy},
  shorttitle = {Inet\_tcp\_proxy},
  author = {{RabbitMQ}},
  year = {2022},
  month = aug,
  urldate = {2023-04-02},
  abstract = {Simulate network partitions in an distributed Erlang cluster},
  howpublished = {RabbitMQ},
  keywords = {distributed-systems,elixir,erlang,integration-testing}
}

@misc{ericssonab2023ct,
  title = {Erlang -- {{Common Test Basics}}},
  shorttitle = {Ct},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {Common Test User's Guide},
  urldate = {2023-04-02},
  howpublished = {https://www.erlang.org/doc/apps/common\_test/basics\_chapter.html},
  annotation = {Version 1.24},
  file = {/Users/vincent/Zotero/storage/E2VYPLXQ/basics_chapter.html}
}

@misc{ericssonab2023eunit,
  title = {Erlang -- {{EUnit}} - a {{Lightweight Unit Testing Framework}} for {{Erlang}}},
  shorttitle = {Eunit},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {EUnit User's Guide},
  urldate = {2023-04-02},
  howpublished = {https://www.erlang.org/doc/apps/eunit/chapter.html},
  annotation = {Version 2.8.2},
  file = {/Users/vincent/Zotero/storage/TMVBJ8VF/chapter.html}
}

@misc{ericssonab2023erldistro,
  title = {Erlang -- {{How}} to {{Implement}} an {{Alternative Carrier}} for the {{Erlang Distribution}}},
  shorttitle = {Erl Distro},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {6 How to Implement an Alternative Carrier for the Erlang Distribution},
  urldate = {2023-04-02},
  howpublished = {https://www.erlang.org/doc/apps/erts/alt\_dist.html},
  annotation = {Version 13.2},
  file = {/Users/vincent/Zotero/storage/RNCYZ7GA/alt_dist.html}
}

@misc{ericssonab2023mnesiaguide,
  title = {Erlang -- {{Mnesia User}}'s {{Guide}}},
  shorttitle = {Mnesia Guide},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {Mnesia User's Guide},
  urldate = {2023-04-07},
  howpublished = {https://www.erlang.org/doc/apps/mnesia/users\_guide.html},
  annotation = {Version 4.21.4},
  file = {/Users/vincent/Zotero/storage/VZ6V8FP2/users_guide.html}
}

@misc{ericssonab2023mnesiaref,
  title = {Erlang -- Mnesia},
  shorttitle = {Mnesia Ref},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {Mnesia Reference Manual},
  urldate = {2023-04-07},
  howpublished = {https://www.erlang.org/doc/man/mnesia.html},
  annotation = {Version 4.21.4},
  file = {/Users/vincent/Zotero/storage/4MMXZ5PY/mnesia.html}
}

@misc{ericssonab2023refmanual,
  title = {Erlang -- {{Erlang Reference Manual}}},
  shorttitle = {Ref Manual},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {Erlang Reference Manual User's Guide},
  urldate = {2023-04-07},
  howpublished = {https://www.erlang.org/doc/reference\_manual/users\_guide.html},
  file = {/Users/vincent/Zotero/storage/W525JCJI/users_guide.html}
}

@misc{ericssonab2023stdlib,
  title = {Erlang -- {{STDLIB User}}'s {{Guide}}},
  shorttitle = {Stdlib},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {STDLIB User's Guide},
  urldate = {2023-04-07},
  howpublished = {https://www.erlang.org/doc/apps/stdlib/users\_guide.html},
  annotation = {Version 4.3}
}


@misc{ericssonab2023otpdesign,
  title = {Erlang -- {{OTP Design Principles}}},
  shorttitle = {Otp Design},
  author = {{Ericsson AB}},
  year = {2023},
  month = mar,
  journal = {OTP Design Principles User's Guide},
  urldate = {2023-04-07},
  howpublished = {https://www.erlang.org/doc/design\_principles/users\_guide.html},
  annotation = {Version 13.2},
  file = {/Users/vincent/Zotero/storage/4MG3JBXX/users_guide.html}
}

@article{haerder1983dbtransaction,
  title = {Principles of Transaction-Oriented Database Recovery},
  shorttitle = {Db Transaction},
  author = {Haerder, Theo and Reuter, Andreas},
  year = {1983},
  month = dec,
  journal = {ACM Computing Surveys},
  volume = {15},
  number = {4},
  pages = {287--317},
  issn = {0360-0300},
  doi = {10.1145/289.291},
  urldate = {2023-04-07},
  file = {/Users/vincent/Zotero/storage/E9XW8KTI/Haerder_Reuter_1983_Principles of transaction-oriented database recovery.pdf}
}

@book{bernstein1987concurrency,
  title = {Concurrency Control and Recovery in Database Systems},
  shorttitle = {Concurrency},
  author = {Bernstein, Philip A. and Hadzilacos, Vassos and Goodman, Nathan},
  year = {1987},
  publisher = {{Addison-Wesley Pub. Co}},
  address = {{Reading, Mass}},
  isbn = {978-0-201-10715-9},
  lccn = {QA76.9.D3 B48 1987},
  keywords = {Database management,Parallel processing (Electronic computers)}
}

@inproceedings{bauwens2019crdtmemory,
  title = {Memory Efficient {{CRDTs}} in Dynamic Environments},
  shorttitle = {Crdt Memory},
  booktitle = {Proceedings of the 11th {{ACM SIGPLAN International Workshop}} on {{Virtual Machines}} and {{Intermediate Languages}}},
  author = {Bauwens, Jim and Gonzalez Boix, Elisa},
  year = {2019},
  month = oct,
  series = {{{VMIL}} 2019},
  pages = {48--57},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3358504.3361231},
  urldate = {2023-04-05},
  abstract = {Modern distributed applications increasingly replicate data in order to guarantee both high availability of systems and an optimal user experience. Conflict-Free Replicated Data Types (CRDTs) are a family of data types specially designed for highly available systems which guarantee some form of eventual consistency. However, memory usage may grow unboundedly in their implementations, as garbage collection of meta-data is not tackled in most approaches. In this paper, we explore a memory management model for operation-based CRDTs in dynamic setting, where nodes can dynamically join a network, and where the implementation can remove unnecessary meta-data employed by CRDTs used to determine the order of operations applied in different replicas. We first describe how new nodes will be brought up-to-date and fully linked with other replicas, and later we introduce our memory management model which allows meta-data to be removed. We benchmark the memory usage of an add-wins set using different garbage collection techniques in various situations and show how our approach can be beneficial in comparison to state of the art techniques.},
  isbn = {978-1-4503-6987-9},
  keywords = {CRDTs,Dynamic networks,Memory management,Replication},
  file = {/Users/vincent/Zotero/storage/ID8SR87S/Bauwens_Gonzalez Boix_2019_Memory efficient CRDTs in dynamic environments.pdf}
}

@article{viotti2016consistency,
  title = {Consistency in {{Non-Transactional Distributed Storage Systems}}},
  shorttitle = {Consistency},
  author = {Viotti, Paolo and Vukoli{\'c}, Marko},
  year = {2016},
  month = jun,
  journal = {ACM Computing Surveys},
  volume = {49},
  number = {1},
  pages = {19:1--19:34},
  issn = {0360-0300},
  doi = {10.1145/2926965},
  urldate = {2023-03-06},
  abstract = {Over the years, different meanings have been associated with the word consistency in the distributed systems community. While in the '80s ``consistency'' typically meant strong consistency, later defined also as linearizability, in recent years, with the advent of highly available and scalable systems, the notion of ``consistency'' has been at the same time both weakened and blurred. In this article, we aim to fill the void in the literature by providing a structured and comprehensive overview of different consistency notions that appeared in distributed systems, and in particular storage systems research, in the last four decades. We overview more than 50 different consistency notions, ranging from linearizability to eventual and weak consistency, defining precisely many of these, in particular where the previous definitions were ambiguous. We further provide a partial order among different consistency predicates, ordering them by their semantic ``strength,'' which we believe will be useful in future research. Finally, we map the consistency semantics to different practical systems and research prototypes. The scope of this article is restricted to non-transactional semantics, that is, those that apply to single storage object operations. As such, our article complements the existing surveys done in the context of transactional, database consistency semantics.},
  keywords = {Consistency,distributed storage},
  file = {/Users/vincent/Zotero/storage/FF3FDDVX/Viotti and Vukolić - 2016 - Consistency in Non-Transactional Distributed Stora.pdf}
}

@book{saltzer2009Principles,
  title = {Principles of {{Computer System Design}}: {{An Introduction}}},
  shorttitle = {Principles},
  author = {Saltzer, Jerome and Kaashoek, M. Frans},
  year = {2009},
  month = may,
  publisher = {{Morgan Kaufmann}},
  abstract = {Principles of Computer System Design is the first textbook to take a principles-based approach to the computer system design. It identifies, examines, and illustrates fundamental concepts in computer system design that are common across operating systems, networks, database systems, distributed systems, programming languages, software engineering, security, fault tolerance, and architecture.Through carefully analyzed case studies from each of these disciplines, it demonstrates how to apply these concepts to tackle practical system design problems. To support the focus on design, the text identifies and explains abstractions that have proven successful in practice such as remote procedure call, client/service organization, file systems, data integrity, consistency, and authenticated messages. Most computer systems are built using a handful of such abstractions. The text describes how these abstractions are implemented, demonstrates how they are used in different systems, and prepares the reader to apply them in future designs.The book is recommended for junior and senior undergraduate students in Operating Systems, Distributed Systems, Distributed Operating Systems and/or Computer Systems Design courses; and professional computer systems designers. Concepts of computer system design guided by fundamental principles Cross-cutting approach that identifies abstractions common to networking, operating systems, transaction systems, distributed systems, architecture, and software engineering Case studies that make the abstractions real: naming (DNS and the URL); file systems (the UNIX file system); clients and services (NFS); virtualization (virtual machines); scheduling (disk arms); security (TLS) Numerous pseudocode fragments that provide concrete examples of abstract concepts Extensive support. The authors and MIT OpenCourseWare provide on-line, free of charge, open educational resources, including additional chapters, course syllabi, board layouts and slides, lecture videos, and an archive of lecture schedules, class assignments, and design projects},
  isbn = {978-0-08-095942-9},
  langid = {english},
  keywords = {Computers / Hardware / Chips \& Processors,Computers / Software Development \& Engineering / Systems Analysis \& Design}
}


@book{kleppmann2017DDIA,
  title = {Designing {{Data-intensive Applications}}: {{The Big Ideas Behind Reliable}}, {{Scalable}}, and {{Maintainable Systems}}},
  shorttitle = {{{DDIA}}},
  author = {Kleppmann, Martin},
  year = {2017},
  publisher = {{O'Reilly Media}},
  abstract = {Data is at the center of many challenges in system design today. Difficult issues need to be figured out, such as scalability, consistency, reliability, efficiency, and maintainability. In addition, we have an overwhelming variety of tools, including relational databases, NoSQL datastores, stream or batch processors, and message brokers. What are the right choices for your application? How do you make sense of all these buzzwords?In this practical and comprehensive guide, author Martin Kleppmann helps you navigate this diverse landscape by examining the pros and cons of various technologies for processing and storing data. Software keeps changing, but the fundamental principles remain the same. With this book, software engineers and architects will learn how to apply those ideas in practice, and how to make full use of data in modern applications.Peer under the hood of the systems you already use, and learn how to use and operate them more effectivelyMake informed decisions by identifying the strengths and weaknesses of different toolsNavigate the trade-offs around consistency, scalability, fault tolerance, and complexityUnderstand the distributed systems research upon which modern databases are builtPeek behind the scenes of major online services, and learn from their architectures},
  googlebooks = {BM7woQEACAAJ},
  isbn = {978-1-4493-7332-0},
  langid = {english},
  keywords = {Computers / Data Modeling \& Design,Computers / Desktop Applications / Databases}
}

@article{ellis1989ot,
  title = {Concurrency Control in Groupware Systems},
  shorttitle = {Ot},
  author = {Ellis, C. A. and Gibbs, S. J.},
  year = {1989},
  month = jun,
  journal = {ACM SIGMOD Record},
  volume = {18},
  number = {2},
  pages = {399--407},
  issn = {0163-5808},
  doi = {10.1145/66926.66963},
  urldate = {2023-04-09},
  abstract = {Groupware systems are computer-based systems that support two or more users engaged in a common task, and that provide an interface to a shared environment. These systems frequently require fine-granularity sharing of data and fast response times. This paper distinguishes real-time groupware systems from other multi-user systems and discusses their concurrency control requirements. An algorithm for concurrency control in real-time groupware systems is then presented. The advantages of this algorithm are its simplicity of use and its responsiveness: users can operate directly on the data without obtaining locks. The algorithm must know some semantics of the operations. However the algorithm's overall structure is independent of the semantic information, allowing the algorithm to be adapted to many situations. An example application of the algorithm to group text editing is given, along with a sketch of its proof of correctness in this particular case. We note that the behavior desired in many of these systems is non-serializable.},
  langid = {english}
}

@inproceedings{klophaus2010Riak,
  title = {Riak {{Core}}: Building Distributed Applications without Shared State},
  shorttitle = {Riak {{Core}}},
  booktitle = {{{ACM SIGPLAN Commercial Users}} of {{Functional Programming}}},
  author = {Klophaus, Rusty},
  year = {2010},
  month = oct,
  series = {{{CUFP}} '10},
  pages = {1},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1900160.1900176},
  urldate = {2023-03-22},
  abstract = {Storing big data reliably is hard. Searching that data is just as hard. Basho Technologies, the company behind Riak KV and Riak Search, focuses on solving these two problems. Both Riak KV (a key-value datastore and map/reduce platform) and Riak Search (a Solr-compatible full-text search and indexing engine) are built around a library called Riak Core that manages the mechanics of running a distributed application in a cluster without requiring a central coordinator or shared state. Using Riak Core, these applications can scale to hundreds of servers, handle enterprise-sized amounts of data, and remain operational in the face of server failure.* This talk will describe the implementation, responsibilities, and boundaries of Riak Core, including how Riak Core: \textbullet Divides the data- or computing-domain of your application into separate virtual nodes located on different physical servers. \textbullet Distributes data and operations to the correct virtual nodes within the cluster. \textbullet Dynamically re-shapes the cluster without requiring a central coordinator when nodes enter, leave, crash, slow down, or go dark. \textbullet Provides the Erlang community with a solid platform for creating other distributed applications. Special attention will be paid to how Riak Core adopts common functional programming patterns and leverages OTP/Erlang libraries and behaviours.},
  isbn = {978-1-4503-0516-7}
}

@misc{redis2022rediscrdt,
  title = {Diving into {{Conflict-Free Replicated Data Types}} ({{CRDTs}})},
  shorttitle = {Redis Crdt},
  author = {{Redis}},
  year = {2022},
  month = mar,
  journal = {Diving into Conflict-Free Replicated Data Types (CRDTs)},
  urldate = {2023-04-09},
  abstract = {CRDTs\textemdash conflict free replicated data types\textemdash let you create geo-distributed applications that bring local latencies to your global user base, while rendering your entire application more resilient. Here's how to start working with CRDTs in Redis Enterprise.},
  howpublished = {https://redis.com/blog/diving-into-crdts/},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/5M4MBUDF/diving-into-crdts.html}
}

@misc{shukla2018CosmosDB,
  title = {Azure {{Cosmos DB}}: {{Pushing}} the Frontier of Globally Distributed Databases},
  shorttitle = {Cosmos {{DB}}},
  author = {Shukla, Dharma},
  year = {2018},
  month = sep,
  journal = {Azure Cosmos DB: Pushing the frontier of globally distributed databases},
  urldate = {2023-04-09},
  abstract = {Since its conception in 2010, as a cloud-born database, we have carefully designed and engineered Azure Cosmos DB to exploit the three fundamental properties of the cloud.},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/7Y946XMR/azure-cosmos-db-pushing-the-frontier-of-globally-distributed-databases.html}
} 

@inproceedings{farinier2015mergable,
  title = {Mergeable Persistent Data Structures},
  shorttitle = {Mergable},
  booktitle = {Vingt-Sixi\`emes {{Journ\'ees Francophones}} Des {{Langages Applicatifs}} ({{JFLA}} 2015)},
  author = {Farinier, Benjamin and Gazagnaire, Thomas and Madhavapeddy, Anil},
  year = {2015},
  month = jan,
  urldate = {2023-04-09},
  abstract = {Irmin is an OCaml library to design purely functional data structures that can be persisted on disk and be merged and synchronised efficiently. In this paper, we focus on the "merge" aspect of the library and present two data structures built on top of Irmin: (i) queues and (ii) ropes that extend the corresponding purely functional data structures with a 3-way merge operation. We provide early theoretical and practical complexity results for these new data structures. Irmin is available as open-source code as part of the MirageOS project.},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/NI7SBKM8/Farinier et al_2015_Mergeable persistent data structures.pdf}
}



@article{lakshman2010Cassandra,
  title = {Cassandra: A Decentralized Structured Storage System},
  shorttitle = {Cassandra},
  author = {Lakshman, Avinash and Malik, Prashant},
  year = {2010},
  month = apr,
  journal = {ACM SIGOPS Operating Systems Review},
  volume = {44},
  number = {2},
  pages = {35--40},
  issn = {0163-5980},
  doi = {10.1145/1773912.1773922},
  urldate = {2023-03-21},
  abstract = {Cassandra is a distributed storage system for managing very large amounts of structured data spread out across many commodity servers, while providing highly available service with no single point of failure. Cassandra aims to run on top of an infrastructure of hundreds of nodes (possibly spread across different data centers). At this scale, small and large components fail continuously. The way Cassandra manages the persistent state in the face of these failures drives the reliability and scalability of the software systems relying on this service. While in many ways Cassandra resembles a database and shares many design and implementation strategies therewith, Cassandra does not support a full relational data model; instead, it provides clients with a simple data model that supports dynamic control over data layout and format. Cassandra system was designed to run on cheap commodity hardware and handle high write throughput while not sacrificing read efficiency.},
  file = {/Users/vincent/Zotero/storage/ZBJGFAI9/Lakshman and Malik - 2010 - Cassandra a decentralized structured storage syst.pdf}
}

@article{birman1991causal,
  title = {Lightweight Causal and Atomic Group Multicast},
  shorttitle = {Causal},
  author = {Birman, Kenneth and Schiper, Andr{\'e} and Stephenson, Pat},
  year = {1991},
  month = aug,
  journal = {ACM Transactions on Computer Systems},
  volume = {9},
  number = {3},
  pages = {272--314},
  issn = {0734-2071},
  doi = {10.1145/128738.128742},
  urldate = {2023-04-10},
  keywords = {fault-tolerant process groups,message ordering,multicast communication},
  file = {/Users/vincent/Zotero/storage/CIB5XYGH/Birman et al_1991_Lightweight causal and atomic group multicast.pdf}
}

@misc{kleppmann2022dist-notes,
  title = {Distributed {{Systems}}, {{Cambridge CST Part IB}} Lecture Notes},
  shorttitle = {Dist-Notes},
  author = {Kleppmann, Martin and Harris, Tim},
  year = {2022},
  address = {{University of Cambridge}},
  urldate = {2023-04-10},
  file = {/Users/vincent/Zotero/storage/3DBBR7UJ/Kleppmann_Harris_2022_Distributed Systems, Cambridge ÇST Part IB lecture notes.pdf}
}

@techreport{schmuck1988broadcast,
  title = {The {{Use}} of {{Efficient Broadcast Protocols}} in {{Asynchronous Distributed Systems}}},
  shorttitle = {Broadcast},
  author = {Schmuck, Frank B.},
  year = {1988},
  month = aug,
  institution = {{Cornell University}},
  urldate = {2023-04-10},
  abstract = {Reliable broadcast protocols are important tools in distributed and  fault-tolerant programming. They are useful for sharing information and for  maintaining replicated data in a distributed system. However, a wide range of  such protocols has been proposed. These protocols differ in their fault  tolerance and delivery ordering characteristics. There is a tradeoff between  the cost of a broadcast protocol and how much ordering it provides. It is,  therefore, desirable to employ protocols that support only a low degree of  ordering whenever possible. This dissertation presents techniques for  deciding how strongly ordered a protocol is necessary to solve a given  application problem. We show that there are two distinct classes of application problems: problems  that can be solved with efficient, asynchronous protocols, and problems that  require global ordering. We introduce the concept of a linearization function  that maps partially ordered sets of events to totally ordered histories. We  show how to construct an asynchronous implementation that solves a given  problem if a linearization function for it can be found. We prove that in general the question of whether a problem has an  asynchronous solution is undecidable. Hence there exists no general algorithm  that would automatically construct a suitable linearization function for a  given problem. Therefore, we consider an important subclass of problems that  have certain commutativity properties. We present techniques for constructing  asynchronous implementations for this class. These techniques are useful for  constructing efficient asynchronous implementations for a broad range of  practical problems.},
  langid = {american},
  annotation = {Accepted: 2007-04-23T17:33:46Z},
  file = {/Users/vincent/Zotero/storage/56JQDC9E/Schmuck_1988_The Use of Efficient Broadcast Protocols in Asynchronous Distributed Systems.pdf}
}


@techreport{mahajan2012cac,
  title = {Consistency, {{Availability}}, and {{Convergence}}},
  shorttitle = {Cac},
  author = {Mahajan, Prince and Alvisi, Lorenzo and Dahlin, Mike},
  year = {2012},
  month = may,
  abstract = {We examine the limits of consistency in fault-tolerant distributed storage systems. In particular, we identify fundamental tradeoffs among properties of consistency, availability, and convergence, and we close the gap between what is known to be impossible (i.e. CAP) and known systems that are highly-available but that provide weaker consistency such as causal. Specifically, in the asynchronous model with omission-failures and unreliable networks, we show the following tight bound: No consistency stronger than Real Time Causal Consistency (RTC) can be provided in an always-available, one-way convergent system and RTC can be provided in an always-available, one-way convergent system. In the asynchronous, Byzantine-failure model, we show that it is impossible to implement many of the recently introduced fork-based consistency semantics without sacrificing either availability or convergence; notably, proposed systems allow Byzantine nodes to permanently partition correct nodes from one another. To address this limitation, we introduce bounded fork join causal semantics that extends causal consistency to Byzantine environments while retaining availability and convergence.},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/SGUPILWG/Mahajan et al. - Consistency, Availability, and Convergence.pdf}
}


@article{gilbert2012cap,
  title = {Perspectives on the {{CAP Theorem}}},
  shorttitle = {Cap},
  author = {Gilbert, Seth and Lynch, Nancy},
  year = {2012},
  month = feb,
  journal = {Computer},
  volume = {45},
  number = {2},
  pages = {30--36},
  issn = {1558-0814},
  doi = {10.1109/MC.2011.389},
  abstract = {The CAP theorem is one example of a more general tradeoff between safety and liveness in unreliable systems. Viewing CAP in this context provides insight into the inherent tradeoffs and the manner in which they can be circumvented in practice.},
  keywords = {CAP theorem,Computer crashes,Data processing,Distributed computing,Distributed databases,Fault tolerance,Relational databases,Reliability},
  file = {/Users/vincent/Zotero/storage/SQ8R6RL3/Gilbert_Lynch_2012_Perspectives on the CAP Theorem.pdf;/Users/vincent/Zotero/storage/4LV7R6VC/6122006.html}
}

@misc{kleppmann2015cap,
  title = {A {{Critique}} of the {{CAP Theorem}}},
  shorttitle = {Cap},
  author = {Kleppmann, Martin},
  year = {2015},
  month = sep,
  number = {arXiv:1509.05393},
  eprint = {1509.05393},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.1509.05393},
  urldate = {2023-04-17},
  abstract = {The CAP Theorem is a frequently cited impossibility result in distributed systems, especially among NoSQL distributed databases. In this paper we survey some of the confusion about the meaning of CAP, including inconsistencies and ambiguities in its definitions, and we highlight some problems in its formalization. CAP is often interpreted as proof that eventually consistent databases have better availability properties than strongly consistent databases; although there is some truth in this, we show that more careful reasoning is required. These problems cast doubt on the utility of CAP as a tool for reasoning about trade-offs in practical systems. As alternative to CAP, we propose a "delay-sensitivity" framework, which analyzes the sensitivity of operation latency to network delay, and which may help practitioners reason about the trade-offs between consistency guarantees and tolerance of network faults.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Databases,Computer Science - Distributed; Parallel; and Cluster Computing},
  file = {/Users/vincent/Zotero/storage/NHPX5BK4/Kleppmann_2015_A Critique of the CAP Theorem.pdf;/Users/vincent/Zotero/storage/ISNLVXD5/1509.html}
}

@misc{andersen2014mnesiacap,
  title = {Mnesia and {{CAP}}},
  shorttitle = {Mnesia Cap},
  author = {Andersen, Jesper L.},
  year = {2014},
  month = sep,
  journal = {Medium},
  urldate = {2023-04-17},
  abstract = {We start out with the TL;DR treatise: The mnesia database is not CP, nor AP. And it cannot be CA, because CA doesn't make any meaningful\ldots},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/XEZA6FY6/mnesia-and-cap-d2673a92850.html}
}

@book{martin2000solid,
  title = {Design {{Principles}} and {{Design Patterns}}},
  shorttitle = {Solid},
  author = {Martin, Robert C},
  year = {2000},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/2NNS2AY6/Martin - 2000 - Design Principles and Design Patterns.pdf}
}

@misc{processone2023ejabberd,
  title = {Processone/Ejabberd},
  shorttitle = {Ejabberd},
  author = {{Processone}},
  year = {2023},
  month = apr,
  urldate = {2023-04-18},
  abstract = {Robust, Ubiquitous and Massively Scalable Messaging Platform (XMPP, MQTT, SIP Server)},
  howpublished = {ProcessOne},
  keywords = {broker,brokers,chat,ejabberd,erlang,groupchat,iot,jabber,jabber-server,matrix,messaging,mqtt,pubsub,server,sip,sip-server,stun,turn,voip,xmpp}
}

@misc{vmware2023rabbitmq,
  title = {{{RabbitMQ Server}}},
  shorttitle = {Rabbitmq},
  author = {{VMware}},
  year = {2023},
  month = apr,
  urldate = {2023-04-18},
  abstract = {Open source RabbitMQ: core server and tier 1 (built-in) plugins},
  howpublished = {RabbitMQ},
  keywords = {amqp,amqp-0-9-1,amqp1-0,messaging,mqtt,rabbitmq,stomp,streaming,streams}
}
@incollection{tomter2021SQLitelocal,
  title = {Augmenting {{SQLite}} for {{Local-First Software}}},
  shorttitle = {{{SQLite}} Local},
  booktitle = {New {{Trends}} in {{Database}} and {{Information Systems}}},
  author = {Tomter, Iver Toft and Yu, Weihai},
  editor = {Bellatreche, Ladjel and Dumas, Marlon and Karras, Panagiotis and Matulevi{\v c}ius, Raimundas and Awad, Ahmed and Weidlich, Matthias and Ivanovi{\'c}, Mirjana and Hartig, Olaf},
  year = {2021},
  volume = {1450},
  pages = {247--257},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-030-85082-1_22},
  urldate = {2023-03-06},
  abstract = {Local-first software aims at both the ability to work offline on local data and the ability to collaborate across multiple devices. CRDTs (conflict-free replicated data types) are abstractions for offline and collaborative work that guarantees strong eventual consistency. RDB (relational database) is a mature and successful computer industry for management of data, and SQLite is an ideal RDB candidate for offline work on locally stored data. CRRs (conflict-free replicated relations) apply CRDTs to RDB data. This paper presents our work in progress that augments SQLite databases with CRR for local-first software. No modification or extra software is needed for existing SQLite applications to continue working with the augmented databases.},
  isbn = {978-3-030-85081-4 978-3-030-85082-1},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/MQ9JE4GL/Tomter and Yu - 2021 - Augmenting SQLite for Local-First Software.pdf}
}

@inproceedings{merkle1988merkletree,
  title = {A {{Digital Signature Based}} on a {{Conventional Encryption Function}}},
  shorttitle = {Merkle Tree},
  booktitle = {Advances in {{Cryptology}} \textemdash{} {{CRYPTO}} '87},
  author = {Merkle, Ralph C.},
  editor = {Pomerance, Carl},
  year = {1988},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {369--378},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/3-540-48184-2_32},
  abstract = {A new digital signature based only on a conventional encryption function (such as DES) is described which is as secure as the underlying encryption function -- the security does not depend on the difficulty of factoring and the high computational costs of modular arithmetic are avoided. The signature system can sign an unlimited number of messages, and the signature size increases logarithmically as a function of the number of messages signed. Signature size in a `typical' system might range from a few hundred bytes to a few kilobytes, and generation of a signature might require a few hundred to a few thousand computations of the underlying conventional encryption function.},
  isbn = {978-3-540-48184-3},
  langid = {english},
  keywords = {Count Field,Encryption Function,Infinite Tree,Modular Arithmetic,Signature Size},
  file = {/Users/vincent/Zotero/storage/NU2MWW8H/Merkle_1988_A Digital Signature Based on a Conventional Encryption Function.pdf}
}

@misc{shapiro2018Antidote,
  title = {Just-{{Right Consistency}}: Reconciling Availability and Safety},
  shorttitle = {Just-{{Right Consistency}}},
  author = {Shapiro, Marc and Bieniusa, Annette and Pregui{\c c}a, Nuno and Balegas, Valter and Meiklejohn, Christopher},
  year = {2018},
  month = jan,
  number = {arXiv:1801.06340},
  eprint = {1801.06340},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.1801.06340},
  urldate = {2023-04-24},
  abstract = {By the CAP Theorem, a distributed data storage system can ensure either Consistency under Partition (CP) or Availability under Partition (AP), but not both. This has led to a split between CP databases, in which updates are synchronous, and AP databases, where they are asynchronous. However, there is no inherent reason to treat all updates identically: simply, the system should be as available as possible, and synchronised just enough for the application to be correct. We offer a principled Just-Right Consistency approach to designing such applications, reconciling correctness with availability and performance, based on the following insights:(i) The Conflict-Free Replicated Data Type (CRDTs) data model supports asynchronous updates in an intuitive and principled way.(ii) Invariants involving joint or mutually-ordered updates are compatible with AP and can be guaranteed by Transactional Causal Consistency, the strongest consistency model that does not compromise availability. Regarding the remaining, "CAP-sensitive" invariants:(iii) For the common pattern of Bounded Counters, we provide encapsulated data type that is proven correct and is efficient; (iv) in the general case, static analysis can identify when synchronisation is not necessary for correctness.Our Antidote cloud database system supports CRDTs, Transactional Causal Consistency and the Bounded Counter data type. Support tools help design applications by static analysis and proof of CAP-sensitive invariants. This system supports industrial-grade applications and has been tested experimentally with hundreds of servers across several geo-distributed data centres.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Databases,Computer Science - Distributed; Parallel; and Cluster Computing},
  file = {/Users/vincent/Zotero/storage/IWLJJUL7/Shapiro et al_2018_Just-Right Consistency.pdf;/Users/vincent/Zotero/storage/9MV6CA3C/1801.html}
}


@misc{apachesoftwarefoundation2023couchdb,
  title = {Apache {{CouchDB User Guides}}},
  shorttitle = {Couchdb},
  author = {{Apache Software Foundation}},
  year = {2023},
  month = jan,
  howpublished = {Apache Software Foundation},
  file = {/Users/vincent/Zotero/storage/5VZHX2SY/pdf.pdf}
}


@misc{balegas2022richcrdt,
  title = {Introducing {{Rich-CRDTs}} {$\cdot$} {{ElectricSQL}}},
  shorttitle = {Richcrdt},
  author = {Balegas, Valter},
  year = {2022},
  month = may,
  journal = {Introducing Rich-CRDTs},
  urldate = {2023-04-24},
  abstract = {Rich-CRDTs are conflict-free data types extended to provide additional database guarantees.},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/57TP6DEK/introducing-rich-crdts.html}
}

@article{chang2008Bigtable,
  title = {Bigtable: {{A Distributed Storage System}} for {{Structured Data}}},
  shorttitle = {Bigtable},
  author = {Chang, Fay and Dean, Jeffrey and Ghemawat, Sanjay and Hsieh, Wilson C. and Wallach, Deborah A. and Burrows, Mike and Chandra, Tushar and Fikes, Andrew and Gruber, Robert E.},
  year = {2008},
  month = jun,
  journal = {ACM Transactions on Computer Systems},
  volume = {26},
  number = {2},
  pages = {4:1--4:26},
  issn = {0734-2071},
  doi = {10.1145/1365815.1365816},
  urldate = {2023-03-21},
  abstract = {Bigtable is a distributed storage system for managing structured data that is designed to scale to a very large size: petabytes of data across thousands of commodity servers. Many projects at Google store data in Bigtable, including web indexing, Google Earth, and Google Finance. These applications place very different demands on Bigtable, both in terms of data size (from URLs to web pages to satellite imagery) and latency requirements (from backend bulk processing to real-time data serving). Despite these varied demands, Bigtable has successfully provided a flexible, high-performance solution for all of these Google products. In this article, we describe the simple data model provided by Bigtable, which gives clients dynamic control over data layout and format, and we describe the design and implementation of Bigtable.},
  keywords = {Large-Scale Distributed Storage},
  file = {/Users/vincent/Zotero/storage/RCAVXYLH/Chang et al. - 2008 - Bigtable A Distributed Storage System for Structu.pdf}
}

@inproceedings{brocco2022Melda,
  title = {Melda: A General Purpose Delta State {{JSON CRDT}}},
  shorttitle = {Melda},
  booktitle = {Proceedings of the 9th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Brocco, Amos},
  year = {2022},
  month = apr,
  series = {{{PaPoC}} '22},
  pages = {1--7},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3517209.3524039},
  urldate = {2023-04-25},
  abstract = {In this paper we present a delta state conflict-free replicated data type for arbitrary JSON documents called Melda, which aims at enabling the implementation of offline-first asynchronous collaboration into applications. The proposed framework does not rely on a coordination service, and supports different types of decentralized storage solutions to tackle the problem of ensuring security, privacy and data portability in the context of collaborative document editing applications. We present our solution both through a formal description of the replicated data type and through some implementation details; moreover we provide an evaluation of the algorithmic complexity, and by means of a synthetic benchmark we analyze the metadata overhead, the actual performance, and the scalability of our approach.},
  isbn = {978-1-4503-9256-3},
  file = {/Users/vincent/Zotero/storage/5SU82ETP/Brocco_2022_Melda.pdf}
}

@article{litt2022Peritext,
  title = {Peritext: {{A CRDT}} for {{Collaborative Rich Text Editing}}},
  shorttitle = {Peritext},
  author = {Litt, Geoffrey and Lim, Sarah and Kleppmann, Martin and {van Hardenberg}, Peter},
  year = {2022},
  month = nov,
  journal = {Proceedings of the ACM on Human-Computer Interaction},
  volume = {6},
  number = {CSCW2},
  pages = {531:1--531:36},
  doi = {10.1145/3555644},
  urldate = {2023-04-25},
  abstract = {Conflict-Free Replicated Data Types (CRDTs) support decentralized collaborative editing of shared data, enabling peer-to-peer sharing and flexible branching and merging workflows. While there is extensive work on CRDTs for plain text, much less is known about CRDTs for rich text with formatting. No algorithms have been published, and existing open-source implementations do not always preserve user intent. In this paper, we describe a model of intent preservation in rich text editing, developed through a series of concurrent editing scenarios. We then describe Peritext, a CRDT algorithm for rich text that satisfies the criteria of our model. The key idea is to store formatting spans alongside the plaintext character sequence, linked to a stable identifier for the first and last character of each span, and then to derive the final formatted text from these spans in a deterministic way that ensures concurrent operations commute. We have prototyped our algorithm in TypeScript, validated it using randomized property-based testing, and integrated it with an editor UI. We also prove that our algorithm ensures convergence, and demonstrate its causality preservation and intention preservation properties.},
  keywords = {asynchronous collaboration,collaborative editing,conflict-free replicated data types,rich text},
  file = {/Users/vincent/Zotero/storage/Q54SF7KH/Litt et al_2022_Peritext.pdf}
}

@inproceedings{kleppmann2019local-first,
  title = {Local-First Software: You Own Your Data, in Spite of the Cloud},
  shorttitle = {Local-First},
  booktitle = {Proceedings of the 2019 {{ACM SIGPLAN International Symposium}} on {{New Ideas}}, {{New Paradigms}}, and {{Reflections}} on {{Programming}} and {{Software}}},
  author = {Kleppmann, Martin and Wiggins, Adam and {van Hardenberg}, Peter and McGranaghan, Mark},
  year = {2019},
  month = oct,
  series = {Onward! 2019},
  pages = {154--178},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3359591.3359737},
  urldate = {2023-04-25},
  abstract = {Cloud apps like Google Docs and Trello are popular because they enable real-time collaboration with colleagues, and they make it easy for us to access our work from all of our devices. However, by centralizing data storage on servers, cloud apps also take away ownership and agency from users. If a service shuts down, the software stops functioning, and data created with that software is lost. In this article we propose local-first software, a set of principles for software that enables both collaboration and ownership for users. Local-first ideals include the ability to work offline and collaborate across multiple devices, while also improving the security, privacy, long-term preservation, and user control of data. We survey existing approaches to data storage and sharing, ranging from email attachments to web apps to Firebase-backed mobile apps, and we examine the trade-offs of each. We look at Conflict-free Replicated Data Types (CRDTs): data structures that are multi-user from the ground up while also being fundamentally local and private. CRDTs have the potential to be a foundational technology for realizing local-first software. We share some of our findings from developing local-first software prototypes at the Ink \& Switch research lab over the course of several years. These experiments test the viability of CRDTs in practice, and explore the user interface challenges for this new data model. Lastly, we suggest some next steps for moving towards local-first software: for researchers, for app developers, and a startup opportunity for entrepreneurs.},
  isbn = {978-1-4503-6995-4},
  keywords = {collaboration software,CRDTs,data ownership,mobile computing,peer-to-peer communication},
  file = {/Users/vincent/Zotero/storage/PCWB4HQF/Kleppmann et al_2019_Local-first software.pdf}
}

@article{weiss2010Logoot,
  title = {Logoot-{{Undo}}: {{Distributed Collaborative Editing System}} on {{P2P Networks}}},
  shorttitle = {Logoot},
  author = {Weiss, Stephane and Urso, Pascal and Molli, Pascal},
  year = {2010},
  month = aug,
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  volume = {21},
  number = {8},
  pages = {1162--1174},
  issn = {1558-2183},
  doi = {10.1109/TPDS.2009.173},
  abstract = {Peer-to-peer systems provide scalable content distribution for cheap and resist to censorship attempts. However, P2P networks mainly distribute immutable content and provide poor support for highly dynamic content such as produced by collaborative systems. A new class of algorithms called CRDT (Commutative Replicated Data Type), which ensures consistency of highly dynamic content on P2P networks, is emerging. However, if existing CRDT algorithms support the "edit anywhere, anytime'' feature, they do not support the "undo anywhere, anytime'' feature. In this paper, we present the Logoot-Undo CRDT algorithm, which integrates the "undo anywhere, anytime'' feature. We compare the performance of the proposed algorithm with related algorithms and measure the impact of the undo feature on the global performance of the algorithm. We prove that the cost of the undo feature remains low on a corpus of data extracted from Wikipedia.},
  keywords = {Collaboration,Collaborative editing,Communication system traffic control,Convergence,Costs,CRDT.,Data mining,group undo,Internet,optimistic replication,P2P,Resists,scalability,Scalability,Traffic control,Wikipedia},
  file = {/Users/vincent/Zotero/storage/NQDYASVB/Weiss et al_2010_Logoot-Undo.pdf}
}

@inproceedings{nicolaescu2016Yjs,
  title = {Near {{Real-Time Peer-to-Peer Shared Editing}} on {{Extensible Data Types}}},
  shorttitle = {Yjs},
  author = {Nicolaescu, Petru and Jahns, Kevin and Derntl, Michael and Klamma, Ralf},
  year = {2016},
  month = nov,
  pages = {39--49},
  doi = {10.1145/2957276.2957310},
  abstract = {Near real-time collaboration using Web browsers is becoming rapidly more and more popular for many applications such as text editing, coding, sketching and others. These applications require reliable algorithms to ensure consistency among the participating Web clients. Operational Transformation (OT) and more recently Commutative Replicated Data Types (CRDT) have become widely adopted solutions for this kind of problem. However, most existing approaches are non-trivial and require trade-offs between expressiveness, suitable infrastructure, performance and simplicity. The ever growing number of potential use cases, the new possibilities of cutting-edge messaging protocols that shaped the near real-time Web, and the use of N-way communication between clients (e.g. WebRTC), create a need for peer-to-peer algorithms that perform well and are not restricted to only a few supported data types. In this paper, we present YATA, an approach for peer-to-peer shared editing applications that ensures convergence, preserves user intentions, allows offline editing and can be utilized for arbitrary data types in the Web browser. Using Yjs, its open-source JavaScript library implementation, we have evaluated the performance and multiple usage of YATA inWeb and mobile browsers, both on test and real-world data. The promising evaluation results as well as the uptake by many commercial vendors and open-source projects indicate a wide applicability of YATA.},
  file = {/Users/vincent/Zotero/storage/AZUGWZZ8/Nicolaescu et al_2016_Near Real-Time Peer-to-Peer Shared Editing on Extensible Data Types.pdf}
}

@article{kleppmann2018Automerge,
  title = {Automerge: {{Real-time}} Data Sync between Edge Devices},
  shorttitle = {Automerge},
  author = {Kleppmann, Martin and Beresford, Alastair R},
  year = {2018},
  month = sep,
  abstract = {We introduce Automerge, a JavaScript library for data synchronisation between mobile devices such as laptop computers and smartphones. It allows users to read and modify data even while their device is offline, and it automatically merges changes made concurrently on different devices. Unlike most existing data synchronisation systems, Automerge does not require data to be sent via a centralised server, but rather allows local and peer-to-peer networks to be used.},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/YARKT8G7/Kleppmann and Beresford - Automerge Real-time data sync between edge device.pdf}
}
@inproceedings{litt2021Cambria,
  title = {Cambria: {{Schema Evolution}} in {{Distributed Systems}} with {{Edit Lenses}}},
  shorttitle = {Cambria},
  booktitle = {Proceedings of the 8th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Litt, Geoffrey and van Hardenberg, Peter and Henry, Orion},
  year = {2021},
  month = apr,
  series = {{{PaPoC}} '21},
  pages = {1--9},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3447865.3457963},
  urldate = {2023-04-25},
  abstract = {Schema evolution is a pervasive challenge in distributed systems. Developers often resort to ad hoc solutions that mix compatibility concerns with application code. We propose a principled replacement: an isolated software layer that uses bidirectional lenses to translate data between schemas on demand to maintain backward and forward compatibility. We have implemented these ideas in a TypeScript library called Cambria, and integrated it with the Automerge CRDT to support peer-to-peer editing. We share reflections from building a decentralized issue tracker application and successfully using Cambria to maintain compatibility across versions. We also present our vision for a "Cambrian Era" for software, where better schema evolution tools enable people to customize their software more freely while preserving the ability to collaborate.},
  isbn = {978-1-4503-8338-7},
  keywords = {bidirectional lenses,CRDTs,schema evolution},
  file = {/Users/vincent/Zotero/storage/JCV8IJ33/Litt et al_2021_Cambria.pdf}
}

@article{rinberg2022DSON,
  title = {{{DSON}}: {{JSON CRDT}} Using Delta-Mutations for Document Stores},
  shorttitle = {{{DSON}}},
  author = {Rinberg, Arik and Solomon, Tomer and Shlomo, Roee and Khazma, Guy and Lushi, Gal and Keidar, Idit and {Ta-Shma}, Paula},
  year = {2022},
  month = jan,
  journal = {Proceedings of the VLDB Endowment},
  volume = {15},
  number = {5},
  pages = {1053--1065},
  issn = {2150-8097},
  doi = {10.14778/3510397.3510403},
  urldate = {2023-04-25},
  abstract = {We propose DSON, a space efficient {$\delta$}-based CRDT approach for distributed JSON document stores, enabling high availability at a global scale, while providing strong eventual consistency guarantees. We define the semantics of our CRDT based approach formally, and prove its correctness and convergence. Previous approaches optimize for collaborative document editing and store metadata proportional to the number of updates to a document, which is not acceptable for long lived document management. The metadata stored with our approach is bounded by O(k2D + n log n), where n is the number of replicas, D is the number of document elements, and k {$\leq$} n is the number of concurrent document updates. We also implement our approach[37] and demonstrate its space efficiency empirically. Experimental analysis shows that the metadata stored is typically significantly less than the worst case. This provides the basis for robust highly available distributed document stores with well defined semantics and safety guarantees, relieving application developers from the burden of conflict resolution.},
  file = {/Users/vincent/Zotero/storage/HR5RJNTG/Rinberg et al_2022_DSON.pdf}
}

@inproceedings{weidner2022counter,
  title = {An Oblivious Observed-Reset Embeddable Replicated Counter},
  shorttitle = {Counter},
  booktitle = {Proceedings of the 9th {{Workshop}} on {{Principles}} and {{Practice}} of {{Consistency}} for {{Distributed Data}}},
  author = {Weidner, Matthew and Almeida, Paulo S{\'e}rgio},
  year = {2022},
  month = apr,
  series = {{{PaPoC}} '22},
  pages = {47--52},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3517209.3524084},
  urldate = {2023-04-25},
  abstract = {Embedding CRDT counters has shown to be a challenging topic, since their introduction in Riak Maps. The desire for obliviousness, where all information about a counter is fully removed upon key removal, faces problems due to the possibility of concurrency between increments and key removals. Previous state-based proposals exhibit undesirable reset-wins semantics, which lead to losing increments, unsatisfactorily solved through manual generation management in the API. Previous operation-based approaches depend on causal stability, being prone to unbounded counter growth under network partitions. We introduce a novel embeddable operation-based CRDT counter which achieves both desirable observed-reset semantics and obliviousness upon resets. Moreover, it achieves this while merely requiring FIFO delivery, allowing a tradeoff between causal consistency and faster information propagation, being more robust under network partitions.},
  isbn = {978-1-4503-9256-3},
  keywords = {CRDTs,distributed counting,eventual consistency},
  file = {/Users/vincent/Zotero/storage/E8X5GT7V/Weidner_Almeida_2022_An oblivious observed-reset embeddable replicated counter.pdf}
}

@article{shapiro2011CRDT,
  title = {Conflict-Free {{Replicated Data Types}}},
  shorttitle = {{{CRDT}}},
  author = {Shapiro, Marc and Pregui{\c c}a, Nuno and Baquero, Carlos and Zawirski, Marek},
  year = {2011},
  abstract = {Replicating data under Eventual Consistency (EC) allows any replica to accept updates without remote synchronisation. This ensures performance and scalability in largescale distributed systems (e.g., clouds). However, published EC approaches are ad-hoc and error-prone. Under a formal Strong Eventual Consistency (SEC) model, we study sufficient conditions for convergence. A data type that satisfies these conditions is called a Conflictfree Replicated Data Type (CRDT). Replicas of any CRDT are guaranteed to converge in a self-stabilising manner, despite any number of failures. This paper formalises two popular approaches (state- and operation-based) and their relevant sufficient conditions. We study a number of useful CRDTs, such as sets with clean semantics, supporting both add and remove operations, and consider in depth the more complex Graph data type. CRDT types can be composed to develop large-scale distributed applications, and have interesting theoretical properties.},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/PLKNK5BC/Shapiro et al. - 2011 - Conﬂict-free Replicated Data Types.pdf}
}

@inproceedings{shapiro2011comprehensive_crdt,
  title = {A Comprehensive Study of {{Convergent}} and {{Commutative Replicated Data Types}}},
  shorttitle = {Crdt},
  author = {Shapiro, M. and Pregui{\c c}a, Nuno M. and Baquero, Carlos and Zawirski, M.},
  year = {2011},
  month = jan,
  urldate = {2023-03-20},
  abstract = {Eventual consistency aims to ensure that replicas of some mutable shared object converge without foreground synchronisation. Previous approaches to eventual consistency are ad-hoc and error-prone. We study a principled approach: to base the design of shared data types on some simple formal conditions that are sufficient to guarantee eventual consistency. We call these types Convergent or Commutative Replicated Data Types (CRDTs). This paper formalises asynchronous object replication, either state based or operation based, and provides a sufficient condition appropriate for each case. It describes several useful CRDTs, including container data types supporting both \textbackslash add and \textbackslash remove operations with clean semantics, and more complex types such as graphs, montonic DAGs, and sequences. It discusses some properties needed to implement non-trivial CRDTs.},
  file = {/Users/vincent/Zotero/storage/8SRM44EQ/Shapiro et al. - 2011 - A comprehensive study of Convergent and Commutativ.pdf}
}

@misc{emqtechnologies2023emqx,
  title = {{{EMQX}}},
  shorttitle = {Emqx},
  author = {{EMQ Technologies}},
  year = {2023},
  month = apr,
  urldate = {2023-04-26},
  abstract = {The most scalable open-source MQTT broker for IoT, IIoT, and connected vehicles},
  howpublished = {EMQ Technologies},
  keywords = {aiot,broker,coap,emqx,erlang,iiot,industry-40,iot,iot-middleware,lorawan,lwm2m,m2m,manufacturing,message-queue,messaging,mqtt,mqtt-broker,mqtt-protocol,mqtt-server,pubsub}
}

@misc{erlangsolutions2023MongooseIM,
  title = {{{MongooseIM}} Platform},
  shorttitle = {{{MongooseIM}}},
  author = {{Erlang Solutions}},
  year = {2023},
  month = apr,
  urldate = {2023-04-26},
  abstract = {MongooseIM is Erlang Solutions' robust, scalable and efficient XMPP server, aimed at large installations. Specifically designed for enterprise purposes, it is fault-tolerant and can utilise the resources of multiple clustered machines.},
  howpublished = {Erlang Solutions},
  keywords = {chat,erlang,hacktoberfest,jabber,messaging,mongooseim,xmpp}
}

@misc{cesarini2019erlang,
  title = {Companies {{Who Use Erlang}}},
  shorttitle = {Erlang},
  author = {Cesarini, Francesco},
  year = {2019},
  month = sep,
  journal = {Which companies are using Erlang, and why?},
  urldate = {2023-04-26},
  abstract = {Once upon a time, Cisco, Ericsson, Klarna, Goldman Sachs, T-Mobile, WhatsApp, Amazon and many other top companies kept a secret. Erlang was that badly kept secret. Discover more on our blog.},
  langid = {american},
  file = {/Users/vincent/Zotero/storage/GMHR9I49/which-companies-are-using-erlang-and-why-mytopdogstatus.html}
}

@article{wikipediacontributors2020LYME,
  title = {{{LYME}} (Software Bundle)},
  shorttitle = {{{LYME}}},
  author = {{Wikipedia contributors}},
  year = {2020},
  month = dec,
  journal = {Wikipedia},
  urldate = {2023-04-28},
  abstract = {LYME and LYCE are software stacks composed entirely of free and open-source software to build high-availability heavy duty dynamic web pages. The stacks are composed of: Linux, the operating system; Yaws, the web server; Mnesia or CouchDB, the database; Erlang, the functional programming language.The LYME and LYCE bundles can be and are combined with many other free and open-source software packages such as e.g. netsniff-ng for security testing and hardening, Snort, an intrusion detection (IDS) and intrusion prevention system (IPS), RRDtool for diagrams, or Nagios, Collectd, or Cacti, for monitoring.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 997412410},
  file = {/Users/vincent/Zotero/storage/URXFIWWV/LYME_(software_bundle).html}
}


@book{silberschatz2020database,
  title = {Database System Concepts},
  shorttitle = {Database},
  author = {Silberschatz, Abraham and Korth, Henry F. and Sudarshan, S.},
  year = {2020},
  edition = {Seventh edition},
  publisher = {{McGraw-Hill}},
  address = {{New York, NY}},
  isbn = {978-0-07-802215-9 978-1-260-51504-6},
  lccn = {QA76.9.D3 S5637 2020},
  keywords = {Database management}
}

@book{lemahieu2018database,
  title = {Principles of Database Management: The Practical Guide to Storing, Managing and Analyzing Big and Small Data},
  shorttitle = {Database},
  author = {Lemahieu, Wilfried and vanden Broucke, Seppe and Baesens, Bart},
  year = {2018},
  edition = {First edition},
  publisher = {{Cambridge University Press}},
  address = {{New York, NY}},
  isbn = {978-1-107-18612-5},
  lccn = {QA76.9.D3 L454 2018},
  keywords = {Database management}
}
@inproceedings{raasveldt2019DuckDB,
  title = {{{DuckDB}}: An {{Embeddable Analytical Database}}},
  shorttitle = {{{DuckDB}}},
  booktitle = {Proceedings of the 2019 {{International Conference}} on {{Management}} of {{Data}}},
  author = {Raasveldt, Mark and M{\"u}hleisen, Hannes},
  year = {2019},
  month = jun,
  series = {{{SIGMOD}} '19},
  pages = {1981--1984},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3299869.3320212},
  urldate = {2023-04-29},
  abstract = {The immense popularity of SQLite shows that there is a need for unobtrusive in-process data management solutions. However, there is no such system yet geared towards analytical workloads. We demonstrate DuckDB, a novel data management system designed to execute analytical SQL queries while embedded in another process. In our demonstration, we pit DuckDB against other data management solutions to showcase its performance in the embedded analytics scenario. DuckDB is available as Open Source software under a permissive license.},
  isbn = {978-1-4503-5643-5},
  file = {/Users/vincent/Zotero/storage/PUIPRQX4/Raasveldt_Mühleisen_2019_DuckDB.pdf}
}

@article{codd1970ra,
  title = {A Relational Model of Data for Large Shared Data Banks},
  shorttitle = {Ra},
  author = {Codd, E. F.},
  year = {1970},
  month = jun,
  journal = {Communications of the ACM},
  volume = {13},
  number = {6},
  pages = {377--387},
  issn = {0001-0782},
  doi = {10.1145/362384.362685},
  urldate = {2023-04-29},
  abstract = {Future users of large data banks must be protected from having to know how the data is organized in the machine (the internal representation). A prompting service which supplies such information is not a satisfactory solution. Activities of users at terminals and most application programs should remain unaffected when the internal representation of data is changed and even when some aspects of the external representation are changed. Changes in data representation will often be needed as a result of changes in query, update, and report traffic and natural growth in the types of stored information. Existing noninferential, formatted data systems provide users with tree-structured files or slightly more general network models of the data. In Section 1, inadequacies of these models are discussed. A model based on n-ary relations, a normal form for data base relations, and the concept of a universal data sublanguage are introduced. In Section 2, certain operations on relations (other than logical inference) are discussed and applied to the problems of redundancy and consistency in the user's model.},
  keywords = {composition,consistency,data bank,data base,data integrity,data organization,data structure,derivability,hierarchies of data,join,networks of data,predicate calculus,redundancy,relations,retrieval language,security},
  file = {/Users/vincent/Zotero/storage/5AXS2M6K/Codd_1970_A relational model of data for large shared data banks.pdf}
}

@article{wikipediacontributors2023ec,
  title = {Eventual Consistency},
  shorttitle = {Ec},
  author = {{Wikipedia contributors}},
  year = {2023},
  month = apr,
  journal = {Wikipedia},
  urldate = {2023-04-29},
  abstract = {Eventual consistency is a consistency model used in distributed computing to achieve high availability that informally guarantees that, if no new updates are made to a given data item, eventually all accesses to that item will return the last updated value. Eventual consistency, also called optimistic replication, is widely deployed in distributed systems and has origins in early mobile computing projects. A system that has achieved eventual consistency is often said to have converged, or achieved replica convergence. Eventual consistency is a weak guarantee \textendash{} most stronger models, like linearizability, are trivially eventually consistent. Eventually-consistent services are often classified as providing BASE semantics (basically-available, soft-state, eventual consistency), in contrast to traditional ACID (atomicity, consistency, isolation, durability). In chemistry, a base is the opposite of an acid, which helps in remembering the acronym.  According to the same resource, these are the rough definitions of each term in BASE: Basically available: reading and writing operations are available as much as possible (using all nodes of a database cluster), but might not be consistent (the write might not persist after conflicts are reconciled, and the read might not get the latest write) Soft-state: without consistency guarantees, after some amount of time, we only have some probability of knowing the state, since it might not yet have converged Eventually consistent: If we execute some writes and then the system functions long enough, we can know the state of the data; any further reads of that data item will return the same valueEventual consistency is sometimes criticized as increasing the complexity of distributed software applications. This is partly because eventual consistency is purely a liveness guarantee (reads eventually return the same value) and does not guarantee safety: an eventually consistent system can return any value before it converges.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1149786374},
  file = {/Users/vincent/Zotero/storage/TIUA3QE6/Eventual_consistency.html}
}

@inproceedings{demers1987epidemic,
  title = {Epidemic Algorithms for Replicated Database Maintenance},
  shorttitle = {Epidemic},
  booktitle = {Proceedings of the Sixth Annual {{ACM Symposium}} on {{Principles}} of Distributed Computing},
  author = {Demers, Alan and Greene, Dan and Hauser, Carl and Irish, Wes and Larson, John and Shenker, Scott and Sturgis, Howard and Swinehart, Dan and Terry, Doug},
  year = {1987},
  month = dec,
  series = {{{PODC}} '87},
  pages = {1--12},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/41840.41841},
  urldate = {2023-04-29},
  isbn = {978-0-89791-239-6},
  file = {/Users/vincent/Zotero/storage/XZC9EYJM/Demers et al_1987_Epidemic algorithms for replicated database maintenance.pdf}
}

@misc{hipp2019sqlite,
  title = {Most {{Widely Deployed SQL Database Engine}}},
  shorttitle = {Sqlite},
  author = {Hipp, Richard},
  year = {2019},
  journal = {Most Widely Deployed and Used Database Engine.},
  urldate = {2023-04-29},
  howpublished = {https://www.sqlite.org/mostdeployed.html},
  file = {/Users/vincent/Zotero/storage/YMJI36HF/mostdeployed.html}
}

@inproceedings{yu2020crr,
  title = {Conflict-{{Free Replicated Relations}} for {{Multi-Synchronous Database Management}} at {{Edge}}},
  shorttitle = {Crr},
  booktitle = {2020 {{IEEE International Conference}} on {{Smart Data Services}} ({{SMDS}})},
  author = {Yu, Weihai and Ignat, Claudia-Lavinia},
  year = {2020},
  month = oct,
  pages = {113--121},
  doi = {10.1109/SMDS49396.2020.00021},
  abstract = {In a cloud-edge environment, edge devices may not always be connected to the network. Still, applications may need to access the data on edge devices even when they are not connected. With support for multi-synchronous access, data on an edge device are kept synchronous with the data in the cloud as long as the device is online. When the device is offline, the application can still access the data on the device, asynchronously with concurrent data updates either in the cloud or on other edge devices. Conflict-free Replicated Data Types (CRDTs) emerged as a technology for multi-synchronous data access. CRDTs guarantee that when all sites have applied the same set of updates, the replicated data converge. However, CRDTs have not been successfully applied to relational databases (RDBs) for multi-synchronous access. In this paper, we present Conflict-free Replicated Relations (CRRs) that apply CRDTs to RDBs for support of multi-synchronous data access. With CRR, existing RDB applications, with very little modification, can be enhanced with multi-synchronous access. We also present a prototype implementation of CRR with some preliminary performance results.},
  keywords = {Conferences,Convergence,CRDT,eventual consistency,integrity constraints,Libraries,Performance evaluation,Prototypes,relational database,Relational databases,Servers},
  file = {/Users/vincent/Zotero/storage/XVRAG7N7/Yu_Ignat_2020_Conflict-Free Replicated Relations for Multi-Synchronous Database Management at.pdf;/Users/vincent/Zotero/storage/6AQTG8L6/9288495.html}
}


@inproceedings{poo1991modularity,
  title = {Modularity versus Efficiency in {{OSI}} System Implementations},
  shorttitle = {Modularity},
  booktitle = {{{IEEE INFCOM}} '91. {{The}} Conference on {{Computer Communications}}. {{Tenth Annual Joint Comference}} of the {{IEEE Computer}} and {{Communications Societies Proceedings}}},
  author = {Poo, G.-S. and Chai, B.-P.},
  year = {1991},
  month = apr,
  pages = {950-959 vol.2},
  doi = {10.1109/INFCOM.1991.147608},
  abstract = {An examination is made of a number of possible implementation strategies using the various prevailing system facilities: processes, threads, kernels and front-end processors. The strategies are analyzed, showing their relative merits in implementations. The analysis leads to the recommendation of an enhanced subsystem architecture that holds the best compromise between the conflicting requirements of modularity and efficiency.{$<>$}},
  keywords = {Computer architecture,Computer science,Hardware,Information systems,ISO,Kernel,Open systems,Protocols,Software maintenance,Yarn},
  file = {/Users/vincent/Zotero/storage/QDMF7E9L/Poo_Chai_1991_Modularity versus efficiency in OSI system implementations.pdf;/Users/vincent/Zotero/storage/LVPREWQU/147608.html}
}
@article{vogels2008ec,
  title = {Eventually {{Consistent}}: {{Building}} Reliable Distributed Systems at a Worldwide Scale Demands Trade-Offs?Between Consistency and Availability.},
  shorttitle = {Ec},
  author = {Vogels, Werner},
  year = {2008},
  month = oct,
  journal = {Queue},
  volume = {6},
  number = {6},
  pages = {14--19},
  issn = {1542-7730},
  doi = {10.1145/1466443.1466448},
  urldate = {2023-04-30},
  abstract = {At the foundation of Amazon's cloud computing are infrastructure services such as Amazon's S3 (Simple Storage Service), SimpleDB, and EC2 (Elastic Compute Cloud) that provide the resources for constructing Internet-scale computing platforms and a great variety of applications. The requirements placed on these infrastructure services are very strict; they need to score high marks in the areas of security, scalability, availability, performance, and cost effectiveness, and they need to meet these requirements while serving millions of customers around the globe, continuously.},
  file = {/Users/vincent/Zotero/storage/QPUU5K9Y/Vogels_2008_Eventually Consistent.pdf}
}

@inproceedings{bermbach2013consistency,
  title = {Consistency in {{Distributed Storage Systems}}},
  shorttitle = {Consistency},
  booktitle = {Networked {{Systems}}},
  author = {Bermbach, David and Kuhlenkamp, J{\"o}rn},
  editor = {Gramoli, Vincent and Guerraoui, Rachid},
  year = {2013},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {175--189},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-40148-0_13},
  abstract = {Due to the advent of eventually consistent storage systems, consistency has become a focus of research. Still, a clear overview of consistency in distributed systems is missing. In this work, we define and describe consistency, show how different consistency models and perspectives are related and briefly discuss how concrete consistency guarantees of a distributed storage system can be measured.},
  isbn = {978-3-642-40148-0},
  langid = {english},
  keywords = {Consistency,Distributed Systems},
  file = {/Users/vincent/Zotero/storage/9YX26LQ3/Bermbach_Kuhlenkamp_2013_Consistency in Distributed Storage Systems.pdf}
}

@misc{mineiro2008DukesofErl,
  title = {Dukes of {{Erl}}: Network Partition ... Oops},
  shorttitle = {Dukes of {{Erl}}},
  author = {Mineiro, Paul},
  year = {2008},
  month = mar,
  journal = {Dukes of Erl},
  urldate = {2023-05-01},
  file = {/Users/vincent/Zotero/storage/J9PEHB8T/network-partition-oops.html}
}

@misc{levy2022RabbitMQvsKafka,
  title = {{{RabbitMQ}} vs {{Kafka}}: {{Use Cases}}, {{Performance}} \& {{Architecture}}},
  shorttitle = {{{RabbitMQ}} vs {{Kafka}}},
  author = {Levy, Eran},
  year = {2022},
  month = feb,
  journal = {Kafka vs. RabbitMQ: Architecture, Performance \& Use Cases},
  urldate = {2023-05-09},
  abstract = {What are the differences between Kafka and RabbitMQ? Read our comprehensive comparison to find out about differences in performance and architecture.},
  langid = {american},
  file = {/Users/vincent/Zotero/storage/PADTBRME/kafka-versus-rabbitmq-architecture-performance-use-case.html}
}


@article{lamport1978clock,
  title = {Time, Clocks, and the Ordering of Events in a Distributed System},
  shorttitle = {Clock},
  author = {Lamport, Leslie},
  year = {1978},
  month = jul,
  journal = {Communications of the ACM},
  volume = {21},
  number = {7},
  pages = {558--565},
  issn = {0001-0782},
  doi = {10.1145/359545.359563},
  urldate = {2023-03-18},
  abstract = {The concept of one event happening before another in a distributed system is examined, and is shown to define a partial ordering of the events. A distributed algorithm is given for synchronizing a system of logical clocks which can be used to totally order the events. The use of the total ordering is illustrated with a method for solving synchronization problems. The algorithm is then specialized for synchronizing physical clocks, and a bound is derived on how far out of synchrony the clocks can become.},
  keywords = {clock synchronization,computer networks,distributed systems,multiprocess systems},
  file = {/Users/vincent/Zotero/storage/962CS7TM/Lamport - 1978 - Time, clocks, and the ordering of events in a dist.pdf}
}

@misc{emqx2023mria,
  title = {Mria},
  shorttitle = {Mria},
  author = {{emqx}},
  year = {2023},
  month = may,
  urldate = {2023-05-16},
  abstract = {Async-ly replicated Mnesia database for Erlang/Elixir},
  copyright = {Apache-2.0},
  howpublished = {EMQ Technologies}
}

@misc{wiger2023unsplit,
  title = {Writing an {{Unsplit}} Method},
  shorttitle = {Unsplit},
  author = {Wiger, Ulf},
  year = {2023},
  month = may,
  urldate = {2023-05-16},
  abstract = {Resolves conflicts in Mnesia after network splits}
}

@misc{wiger2010unsplitmail,
  title = {[Erlang-Questions] Unsplit - Resolving Mnesia Inconsistencies},
  shorttitle = {Unsplit Mail},
  author = {Wiger, Ulf},
  year = {Thu Feb 4 22:39:02 CET 2010},
  urldate = {2023-05-16},
  file = {/Users/vincent/Zotero/storage/XCBDXK7K/049226.html}
}

@inproceedings{mattsson1998mnesia,
  title = {Mnesia \textemdash{} {{A Distributed Robust DBMS}} for {{Telecommunications Applications}}},
  shorttitle = {Mnesia},
  booktitle = {Practical {{Aspects}} of {{Declarative Languages}}},
  author = {Mattsson, H{\aa}kan and Nilsson, Hans and Wikstr{\"o}m, Claes},
  editor = {Gupta, Gopal},
  year = {1998},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {152--163},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/3-540-49201-1_11},
  abstract = {The Mnesia DBMS runs in the same adress space as the application owning the data, yet the application cannot destroy the contents of the data base. This provides for both fast accesses and efficient fault tolerance, normally conflicting requirements. The implementation is based on features in the Erlang programming language, in which Mnesia is embedded.},
  isbn = {978-3-540-49201-6},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/L5B4MDYY/Mattsson et al_1998_Mnesia — A Distributed Robust DBMS for Telecommunications Applications.pdf}
}

@misc{mattsson2009impltxt,
  title = {Mnesia Implementation Documentation},
  shorttitle = {Impltxt},
  author = {MATTSSON, {\relax HAKAN}},
  year = {2009},
  month = nov,
  urldate = {2023-05-27}
}

@misc{mattsson1999mnesiainternal,
  title = {Mnesia Internals},
  shorttitle = {Mnesia Internal},
  author = {MATTSSON, {\relax HAKAN}},
  year = {1999},
  month = oct,
  address = {{Ericsson}},
  urldate = {2023-05-29}
}

@misc{vorontsov2018forgETS,
  title = {Mikhail {{Vorontsov}} -  {{ForgETS}}: A Globally Distributed Database - {{Code Beam STO}}},
  shorttitle = {{{forgETS}}},
  author = {Vorontsov, Mikhail},
  year = {2018},
  month = jun,
  urldate = {2023-05-27},
  abstract = {ForgETS is a globally distributed, replicated in-memory, database collocated with business logic. It allows WhatsApp to have globally replicated datasets with optional disk persistence collocated with our business logic, which provides zero latency data access allowing WhatsApp to sustain temporary network and server outages. ForgETS' design is based on Mnesia with additional support for: 1) network blips and subsequent auto reconciliation 2) explicit support for globally replicated datasets which enforces different replication/reconciliation rules across different regions 3) easier schema management allowing to user to add more servers into the cluster by means of configuration files updates More details on website here: http://codesync.global/speaker/mikhai...}
}

@inproceedings{cooper2010ycsb,
  title = {Benchmarking Cloud Serving Systems with {{YCSB}}},
  shorttitle = {Ycsb},
  booktitle = {Proceedings of the 1st {{ACM}} Symposium on {{Cloud}} Computing},
  author = {Cooper, Brian F. and Silberstein, Adam and Tam, Erwin and Ramakrishnan, Raghu and Sears, Russell},
  date = {2010-06-10},
  pages = {143--154},
  publisher = {{ACM}},
  location = {{Indianapolis Indiana USA}},
  doi = {10.1145/1807128.1807152},
  url = {https://dl.acm.org/doi/10.1145/1807128.1807152},
  urldate = {2023-08-02},
  abstract = {While the use of MapReduce systems (such as Hadoop) for large scale data analysis has been widely recognized and studied, we have recently seen an explosion in the number of systems developed for cloud data serving. These newer systems address “cloud OLTP” applications, though they typically do not support ACID transactions. Examples of systems proposed for cloud serving use include BigTable, PNUTS, Cassandra, HBase, Azure, CouchDB, SimpleDB, Voldemort, and many others. Further, they are being applied to a diverse range of applications that differ considerably from traditional (e.g., TPC-C like) serving workloads. The number of emerging cloud serving systems and the wide range of proposed applications, coupled with a lack of applesto-apples performance comparisons, makes it difficult to understand the tradeoffs between systems and the workloads for which they are suited. We present the Yahoo! Cloud Serving Benchmark (YCSB) framework, with the goal of facilitating performance comparisons of the new generation of cloud data serving systems. We define a core set of benchmarks and report results for four widely used systems: Cassandra, HBase, Yahoo!’s PNUTS, and a simple sharded MySQL implementation. We also hope to foster the development of additional cloud benchmark suites that represent other classes of applications by making our benchmark tool available via open source. In this regard, a key feature of the YCSB framework/tool is that it is extensible—it supports easy definition of new workloads, in addition to making it easy to benchmark new systems.},
  eventtitle = {{{SOCC}} '10: {{ACM SIGMOD-SIGOPS Workshop}} on {{Cloud Computing}} in Conjunction with {{SIGMOD}} 2010},
  isbn = {978-1-4503-0036-0},
  langid = {english},
  file = {/Users/vincent/Zotero/storage/TUDNHHF2/Cooper et al. - 2010 - Benchmarking cloud serving systems with YCSB.pdf}
}


@online{thetransactionprocessingcouncil2023tpc,
  title = {{{TPC Benchmark}}},
  shorttitle = {Tpc},
  author = {{The Transaction Processing Council}},
  date = {2023},
  url = {https://www.tpc.org/information/who/whoweare5.asp},
  urldate = {2023-09-12},
  file = {/Users/vincent/Zotero/storage/7DKT9KU2/whoweare5.html}
} 

@Article{Abril07,
  author        = "Patricia S. Abril and Robert Plant",
  title         = "The patent holder's dilemma: Buy, sell, or troll?",
  journal       = "Communications of the ACM",
  volume        = "50",
  number        = "1",
  month         = jan,
  year          = "2007",
  pages         = "36--44",
  doi           = "10.1145/1188913.1188915",
  url           = "http://doi.acm.org/10.1145/1219092.1219093",
  note          = "",
}

@Article{Cohen07,
  author        = "Sarah Cohen and Werner Nutt and Yehoshua Sagic",
  title         = "Deciding equivalances among conjunctive aggregate queries",
  journal       = JACM,
  articleno     = "5",
  numpages      = "50",
  volume        = "54",
  number        = "2",
  month         = apr,
  year          = "2007",
  doi           = "10.1145/1219092.1219093",
  url           = "http://doi.acm.org/10.1145/1219092.1219093",
  acmid         = "1219093",
  note          = "",
}


@periodical{JCohen96,
  key =          "Cohen",
  editor =       "Jacques Cohen",
  title =        "Special issue: Digital Libraries",
  journal =      CACM,
  volume =       "39",
  number =       "11",
  month =        nov,
  year =         "1996",
}


@Book{Kosiur01,
  author =       "David Kosiur",
  title =        "Understanding Policy-Based Networking",
  publisher =    "Wiley",
  year =         "2001",
  address =      "USA",
  edition =      "2.",
  editor =       "",
  volume =       "",
  number =       "",
  series =       "",
  month =        "",
  note =         "",
}


@Book{Harel79,
  author =       "David Harel",
  year =         "1979",
  title =        "First-Order Dynamic Logic",
  series =       "Lecture Notes in Computer Science",
  volume =       "68",
  address =      "New York, NY",
  publisher =    "Springer-Verlag",
  doi =          "10.1007/3-540-09237-4",
  url =          "http://dx.doi.org/10.1007/3-540-09237-4",
  editor =       "",
  number =       "",
  month =        "",
  note =         "",
}

@inbook{Editor00,
  author       = {Peter Eston}, 
  title        = {The title of the work},
  chapter      = 8,
  pages        = {201-213},
  publisher    = {The name of the publisher},
  doi =          "10.1007/3-540-09237-4",
  year         = 1993,
  volume       = 4,
  series       = 5,
  address      = {The address of the publisher},
  edition      = 3,
  month        = 7,
  note         = {An optional note}
}

%
@InBook{Editor00a,
  author =       "",
  editor =       "Ian Editor",
  title =        "The title of book two",
  subtitle =     "The book subtitle",
  series =       "The name of the series two",
  year =         "2008",
  address =      "Chicago",
  edition =      "2nd.",
  publisher =    "University of Chicago Press",
  doi =          "10.1007/3-540-09237-4",
  url =          "http://dx.doi.org/10.1007/3-540-09456-9",
  volume =       "",
  chapter =      "100",
  pages        = {201-213},
  number =       "",
  type =         "",
  month =        "",
  note =         "",
}


% incollection (has an editor, title, and possibly a booktitle)
@Incollection{Spector90,
  author =       "Asad Z. Spector",
  title =        "Achieving application requirements",
  booktitle =    "Distributed Systems",
  publisher =    "ACM Press",
  address =      "New York, NY",
  year =         "1990",
  edition =      "2nd.",
  chapter =      "",
  editor =       "Sape Mullender",
  pages =        "19--33",
  doi =          "10.1145/90417.90738",
  url =          "http://doi.acm.org/10.1145/90417.90738",
  volume =       "",
  number =       "",
  series =       "",
  type =         "",
  month =        "",
  note =         "",
}


% incollection (has an editor, title, and possibly a booktitle)
@Incollection{Douglass98,
  author =       "Bruce P. Douglass and David Harel and Mark B. Trakhtenbrot",
  title =        "Statecarts in use: structured analysis and object-orientation",
  series =       "Lecture Notes in Computer Science",
  booktitle =    "Lectures on Embedded Systems",
  publisher =    "Springer-Verlag",
  address =      "London",
  volume =       "1494",
  year =         "1998",
  chapter =      "",
  editor =       "Grzegorz Rozenberg and Frits W. Vaandrager",
  pages =        "368--394",
  doi =          "10.1007/3-540-65193-4_29",
  url =          "http://dx.doi.org/10.1007/3-540-65193-4_29",
  edition =      "",
  number =       "",
  type =         "",
  month =        "",
  note =         "",
}


@Book{Knuth97,
  author =       "Donald E. Knuth",
  title =        "The Art of Computer Programming, Vol. 1: Fundamental Algorithms (3rd. ed.)",
  publisher =    "Addison Wesley Longman Publishing Co., Inc.",
  year =         "1997",
  address =      "USA",
  edition =      "",
  editor =       "",
  volume =       "",
  number =       "",
  series =       "",
  month =        "",
  note =         "",
}


@Book{Knuth98,
  author =       "Donald E. Knuth",
  year =         "1998",
  title =        "The Art of Computer Programming",
  series =       "Fundamental Algorithms",
  volume =       "1",
  edition =      "3rd",
  address =      "",
  publisher =    "Addison Wesley Longman Publishing Co., Inc.",
  doi =          "",
  url =          "",
  editor =       "",
  number =       "",
  month =        "",
  note =         "(book)",
}

%Inbook{Knuth97,
%  author =       "Donald E. Knuth",
%  title =        "The Art of Computer Programming",
%  booktitle =    "the booktitle",
%  edition =      "3",
%  volume =       "1",
%  year =         "1997",
%  publisher =    "Addison Wesley Longman Publishing Co., Inc.",
%  editor =       "",
%  number =       "",
%  series =       "Fundamental Algorithms",
%  type =         "",
%  chapter =      "",
%  pages =        "",
%  address =      "",
%  month =        "",
%  note =         "(inbook)",
%}

%INBOOK{DK:73-inbook-full,
%   author = "Donald E. Knuth",
%   title = "Fundamental Algorithms (inbook w series)",
%   volume = 1,
%   series = "The Art of Computer Programming",
%   publisher = "Addison-Wesley",
%   address = "Reading, Massachusetts",
%   edition = "Second",
%   month = "10~" # jan,
%   year = "1973",
%   type = "Section",
%   chapter = "1.2",
%   pages = "10--119",
%   note = "Full INBOOK entry (w series)",
%}

%INcollection{DK:74-incoll,
%   author = "Donald E. Knuth",
%   title = "Fundamental Algorithms (incoll)",
%   volume = 1,
%   booktitle = "The Art of Computer Programming",
%   publisher = "Addison-Wesley",
%   address = "Reading, Massachusetts",
%   month = "10~" # jan,
%   year = "1974",
%   pages = "10--119",
%   editor = "Bernard Rous",
%   note = "This is a full incoll entry with an editor",
%}

%INcollection{DK:75-incollws,
%   author = "Donald E. Knuth",
%   title = "Fundamental Algorithms (incoll w series)",
%   volume = 1,
%   booktitle = "The Art of Computer Programming",
%   series = "The Art of Computer Programming",
%   publisher = "Addison-Wesley",
%   address = "Reading, Massachusetts",
%   month = "10~" # jan,
%   year = "1975",
%   pages = "10--119",
%   editor = "Bernard Rous",
%   note = "This is a full incoll entry with an editor and series",
%}


@incollection{GM05,
Author= "Dan Geiger and Christopher Meek",
Title= "Structured Variational Inference Procedures and their Realizations (as incol)",
Year= 2005,
Booktitle="Proceedings of Tenth International Workshop on Artificial Intelligence and Statistics, {\rm The Barbados}",
Publisher="The Society for Artificial Intelligence and Statistics",
Month= jan,
Editors= "Z. Ghahramani and R. Cowell"
}

@Inproceedings{Smith10,
  author =       "Stan W. Smith",
  title =        "An experiment in bibliographic mark-up: Parsing metadata for XML export",
  booktitle =    "Proceedings of the 3rd. annual workshop on Librarians and Computers",
  series =       "LAC '10",
  editor =       "Reginald N. Smythe and Alexander Noble",
  volume =       "3",
  year =         "2010",
  publisher =    "Paparazzi Press",
  address =      "Milan Italy",
  pages =        "422--431",
  doi =          "10.1038/nphys1170",
  url =          "https://dx.doi.org/10.1038/nphys1170",
  number =       "",
  month =        "",
  organization = "",
  note =         "",
}

@Inproceedings{VanGundy07,
  author =       "Matthew Van Gundy and Davide Balzarotti and Giovanni Vigna",
  year =         "2007",
  title =        "Catch me, if you can: Evading network signatures with web-based polymorphic worms",
  booktitle =    "Proceedings of the first USENIX workshop on Offensive Technologies",
  series =       "WOOT '07",
  publisher =    "USENIX Association",
  address =      "Berkley, CA",
  articleno =    "7",
  numpages =     "9",
  editor =       "",
  volume =       "",
  number =       "",
  pages =        "",
  month =        "",
  organization = "",
  note =         "",
}

@Inproceedings{VanGundy08,
  author =       "Matthew Van Gundy and Davide Balzarotti and Giovanni Vigna",
  year =         "2008",
  title =        "Catch me, if you can: Evading network signatures with web-based polymorphic worms",
  booktitle =    "Proceedings of the first USENIX workshop on Offensive Technologies",
  series =       "WOOT '08",
  publisher =    "USENIX Association",
  address =      "Berkley, CA",
  articleno =    "7",
  numpages =     "2",
  editor =       "",
  volume =       "",
  number =       "",
  pages =        "99-100",
  month =        "",
  organization = "",
  note =         "",
}

@Inproceedings{VanGundy09,
  author =       "Matthew Van Gundy and Davide Balzarotti and Giovanni Vigna",
  year =         "2009",
  title =        "Catch me, if you can: Evading network signatures with web-based polymorphic worms",
  booktitle =    "Proceedings of the first USENIX workshop on Offensive Technologies",
  series =       "WOOT '09",
  publisher =    "USENIX Association",
  address =      "Berkley, CA",
  articleno =    "",
  numpages =     "",
  editor =       "",
  volume =       "",
  number =       "",
  pages =        "90--100",
  month =        "",
  organization = "",
  note =         "",
}

@Inproceedings{Andler79,
  author =       "Sten Andler",
  title =        "Predicate Path expressions",
  booktitle =    "Proceedings of the 6th. ACM SIGACT-SIGPLAN symposium on Principles of Programming Languages",
  series =       "POPL '79",
  year =         "1979",
  publisher =    "ACM Press",
  address =      "New York, NY",
  pages =        "226--236",
  doi =          "10.1145/567752.567774",
  url =          "http://doi.acm.org/10.1145/567752.567774",
  editor =       "",
  volume =       "",
  number =       "",
  month =        "",
  organization = "",
  note =         "",
}

@Techreport{Harel78,
  author =       "David Harel",
  year =         "1978",
  title =        "LOGICS of Programs: AXIOMATICS and DESCRIPTIVE POWER",
  institution =  "Massachusetts Institute of Technology",
  type =         "MIT Research Lab Technical Report",
  number =       "TR-200",
  address =      "Cambridge, MA",
  month =        "",
  note =         "",
}

@MASTERSTHESIS{anisi03,
author = {David A. Anisi},
title = {Optimal Motion Control of a Ground Vehicle},
school = {Royal Institute of Technology (KTH), Stockholm, Sweden},
intitution = {FOI-R-0961-SE, Swedish Defence Research Agency (FOI)},
year = {2003},
}


@Phdthesis{Clarkson85,
  author =       "Kenneth L. Clarkson",
  year =         "1985",
  title =        "Algorithms for Closest-Point Problems (Computational Geometry)",
  school =       "Stanford University",
  address =      "Palo Alto, CA",
  note =         "UMI Order Number: AAT 8506171",
  type =         "",
  month =        "",
}


@online{Thornburg01,
  author =       "Harry Thornburg",
  year =         "2001",
  title =        "Introduction to Bayesian Statistics",
  url =          "http://ccrma.stanford.edu/~jos/bayes/bayes.html",
  organization = "Stanford University",
  month =        mar,
  lastaccessed = "March 2, 2005",
}


@online{Ablamowicz07,
  author =       "Rafal Ablamowicz and Bertfried Fauser",
  year =         "2007",
  title =        "CLIFFORD: a Maple 11 Package for Clifford Algebra Computations, version 11",
  url =          "http://math.tntech.edu/rafal/cliff11/index.html",
  lastaccessed = "February 28, 2008",
  organization = "Tennessee Technological University",
}


@misc{Poker06,
  author =       "Poker-Edge.Com",
  year =         "2006",
  month =        mar,
  title =        "Stats and Analysis",
  lastaccessed = "June 7, 2006",
  url =          "http://www.poker-edge.com/stats.php",
}

@misc{Obama08,
  author        = "Barack Obama",
  year          = "2008",
  title         = "A more perfect union",
  howpublished  = "Video",
  day           = "5",
  url           = "http://video.google.com/videoplay?docid=6528042696351994555",
  month         = mar,
  lastaccessed  = "March 21, 2008",
  note          =  "",
}

@misc{JoeScientist001,
  author =       "Joseph Scientist",
  year =         "2009",
  title =        "The fountain of youth",
  note =         "Patent No. 12345, Filed July 1st., 2008, Issued Aug. 9th., 2009",
  url =          "",
  howpublished = "",
  month =        aug,
  lastaccessed = "",
}


@Inproceedings{Novak03,
  author =       "Dave Novak",
  title =        "Solder man",
  booktitle =    "ACM SIGGRAPH 2003 Video Review on Animation theater Program: Part I - Vol. 145 (July 27--27, 2003)",
  year =         "2003",
  publisher =    "ACM Press",
  address =      "New York, NY",
  pages =        "4",
  month =        "March 21, 2008",
  doi =          "99.9999/woot07-S422",
  url =          "http://video.google.com/videoplay?docid=6528042696351994555",
  note =         "",
  howpublished = "Video",
  editor =       "",
  volume =       "",
  number =       "",
  series =       "",
  organization = "",
}


@article{Lee05,
  author =       "Newton Lee",
  year =         "2005",
  title =        "Interview with Bill Kinder: January 13, 2005",
  journal =      "Comput. Entertain.",
  eid =          "4",
  volume =       "3",
  number =       "1",
  month =        "Jan.-March",
  doi =          "10.1145/1057270.1057278",
  url =          "http://doi.acm.org/10.1145/1057270.1057278",
  howpublished = "Video",
  note =         "",
}

@article{Rous08,
  author =       "Bernard Rous",
  year =         "2008",
  title =        "The Enabling of Digital Libraries",
  journal =      "Digital Libraries",
  volume =       "12",
  number =       "3",
  month =        jul,
  articleno =    "5",
  doi =          "",
  url =          "",
  howpublished = "",
  note =         "To appear",
}

@article{384253,
 author = {Werneck,, Renato and Setubal,, Jo\~{a}o and da Conceic\~{a}o,, Arlindo},
 title = {(old) Finding minimum congestion spanning trees},
 journal = {J. Exp. Algorithmics},
 volume = {5},
 year = {2000},
 issn = {1084-6654},
 pages = {11},
 doi = {http://doi.acm.org/10.1145/351827.384253},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@article{Werneck:2000:FMC:351827.384253,
 author = {Werneck, Renato and Setubal, Jo\~{a}o and da Conceic\~{a}o, Arlindo},
 title = {(new) Finding minimum congestion spanning trees},
 journal = {J. Exp. Algorithmics},
 volume = {5},
 month = dec,
 year = {2000},
 issn = {1084-6654},
 articleno = {11},
 url = {http://portal.acm.org/citation.cfm?id=351827.384253},
 doi = {10.1145/351827.384253},
 acmid = {384253},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{1555162,
 author = {Conti, Mauro and Di Pietro, Roberto and Mancini, Luigi V. and Mei, Alessandro},
 title = {(old) Distributed data source verification in wireless sensor networks},
 journal = {Inf. Fusion},
 volume = {10},
 number = {4},
 year = {2009},
 issn = {1566-2535},
 pages = {342--353},
 doi = {http://dx.doi.org/10.1016/j.inffus.2009.01.002},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 }

@article{Conti:2009:DDS:1555009.1555162,
 author = {Conti, Mauro and Di Pietro, Roberto and Mancini, Luigi V. and Mei, Alessandro},
 title = {(new) Distributed data source verification in wireless sensor networks},
 journal = {Inf. Fusion},
 volume = {10},
 number = {4},
 month = oct,
 year = {2009},
 issn = {1566-2535},
 pages = {342--353},
 numpages = {12},
 url = {http://portal.acm.org/citation.cfm?id=1555009.1555162},
 doi = {10.1016/j.inffus.2009.01.002},
 acmid = {1555162},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Clone detection, Distributed protocol, Securing data fusion, Wireless sensor networks},
}

@inproceedings{Li:2008:PUC:1358628.1358946,
 author = {Li, Cheng-Lun and Buyuktur, Ayse G. and Hutchful, David K. and Sant, Natasha B. and Nainwal, Satyendra K.},
 title = {Portalis: using competitive online interactions to support aid initiatives for the homeless},
 booktitle = {CHI '08 extended abstracts on Human factors in computing systems},
 year = {2008},
 isbn = {978-1-60558-012-X},
 location = {Florence, Italy},
 pages = {3873--3878},
 numpages = {6},
 url = {http://portal.acm.org/citation.cfm?id=1358628.1358946},
 doi = {10.1145/1358628.1358946},
 acmid = {1358946},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cscw, distributed knowledge acquisition, incentive design, online games, recommender systems, reputation systems, user studies, virtual community},
}

@book{Hollis:1999:VBD:519964,
 author = {Hollis, Billy S.},
 title = {Visual Basic 6: Design, Specification, and Objects with Other},
 year = {1999},
 isbn = {0130850845},
 edition = {1st},
 publisher = {Prentice Hall PTR},
 address = {Upper Saddle River, NJ, USA},
 }


@book{Goossens:1999:LWC:553897,
 author = {Goossens, Michel and Rahtz, S. P. and Moore, Ross and Sutor, Robert S.},
 title = {The  Latex Web Companion: Integrating TEX, HTML, and XML},
 year = {1999},
 isbn = {0201433117},
 edition = {1st},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
 }

% need to test genres for errant isbn output

% techreport
@techreport{897367,
 author = {Buss, Jonathan F. and Rosenberg, Arnold L. and Knott, Judson D.},
 title = {Vertex Types in Book-Embeddings},
 year = {1987},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aumass_cs%3Ancstrl.umassa_cs%2F%2FUM-CS-1987-018},
 publisher = {University of Massachusetts},
 address = {Amherst, MA, USA},
 }

@techreport{Buss:1987:VTB:897367,
 author = {Buss, Jonathan F. and Rosenberg, Arnold L. and Knott, Judson D.},
 title = {Vertex Types in Book-Embeddings},
 year = {1987},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aumass_cs%3Ancstrl.umassa_cs%2F%2FUM-CS-1987-018},
 publisher = {University of Massachusetts},
 address = {Amherst, MA, USA},
 }

% whole proceedings

@proceedings{Czerwinski:2008:1358628,
 author = {},
 note = {General Chair-Czerwinski, Mary and General Chair-Lund, Arnie and Program Chair-Tan, Desney},
 title = {CHI '08: CHI '08 extended abstracts on Human factors in computing systems},
 year = {2008},
 isbn = {978-1-60558-012-X},
 location = {Florence, Italy},
 order_no = {608085},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

% phdthesis

@phdthesis{Clarkson:1985:ACP:911891,
 author = {Clarkson, Kenneth Lee},
 advisor = {Yao, Andrew C.},
 title = {Algorithms for Closest-Point Problems (Computational Geometry)},
 year = {1985},
 note = {AAT 8506171},
 school = {Stanford University},
 address = {Stanford, CA, USA},
 }
% school is being picked up -- but not publisher (which is OK)
% Also -- the title is NOT being output in italics !!! Arrrrgh! - I fixed it. :-)


%%% compare with 'old'
%%% atsign-Phdthesis{Clarkson85,
%%%  author =       "Kenneth L. Clarkson",
%%%  year =         "1985",
%%%  title =        "Algorithms for Closest-Point Problems (Computational Geometry)",
%%%  school =       "Stanford University",
%%%  address =      "Palo Alto, CA",
%%%  note =         "UMI Order Number: AAT 8506171",
%%%  type =         "",
%%%  month =        "",
%%%}

% A bibliography
@Article{1984:1040142,
 key = {{$\!\!$}},
 journal = {SIGCOMM Comput. Commun. Rev.},
 year = {1984},
 issn = {0146-4833},
 volume = {13-14},
 number = {5-1},
 issue_date = {January/April 1984},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


% grinder
@inproceedings{2004:ITE:1009386.1010128,
 key = {IEEE},
 title = {IEEE TCSC Executive Committee},
 booktitle = {Proceedings of the IEEE International Conference on Web Services},
 series = {ICWS '04},
 year = {2004},
 isbn = {0-7695-2167-3},
 pages = {21--22},
 url = {http://dx.doi.org/10.1109/ICWS.2004.64},
 doi = {http://dx.doi.org/10.1109/ICWS.2004.64},
 acmid = {1010128},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

% div book
@book{Mullender:1993:DS(:302430,
 editor = {Mullender, Sape},
 title = {Distributed systems (2nd Ed.)},
 year = {1993},
 isbn = {0-201-62427-3},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 address = {New York, NY, USA},
 }

% master thesis (as techreport and thesis)

@techreport{Petrie:1986:NAD:899644,
 author = {Petrie, Charles J.},
 title = {New Algorithms for Dependency-Directed Backtracking (Master's thesis)},
 year = {1986},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Autexas_cs%3AUTEXAS_CS%2F%2FAI86-33},
 publisher = {University of Texas at Austin},
 address = {Austin, TX, USA},
 }

@MASTERSTHESIS{Petrie:1986:NAD:12345,
 author = {Petrie, Charles J.},
 title = {New Algorithms for Dependency-Directed Backtracking (Master's thesis)},
 year = {1986},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Autexas_cs%3AUTEXAS_CS%2F%2FAI86-33},
 school = {University of Texas at Austin},
 address = {Austin, TX, USA},
 }




@BOOK{book-minimal,
   author = "Donald E. Knuth",
   title = "Seminumerical Algorithms",
   publisher = "Addison-Wesley",
   year = "1981",
}

% incollection (has an editor, title, and possibly a booktitle)
@INcollection{KA:2001,
 author = {Kong, Wei-Chang},
 Title = {The implementation of electronic commerce in SMEs in Singapore (as Incoll)},
 booktitle = {E-commerce and cultural values},
 year = {2001},
 isbn = {1-59140-056-2},
 pages = {51--74},
 numpages = {24},
 url = {http://portal.acm.org/citation.cfm?id=887006.887010},
 acmid = {887010},
 publisher = {IGI Publishing},
 address = {Hershey, PA, USA},
}


% with bibfield 'type' before chapter (note no editor)
@INBOOK{KAGM:2001,
 author = {Kong, Wei-Chang},
 type = {Name of Chapter:},
 chapter = {The implementation of electronic commerce in SMEs in Singapore (Inbook-w-chap-w-type)},
 title = {E-commerce and cultural values},
 year = {2001},
 isbn = {1-59140-056-2},
 pages = {51--74},
 numpages = {24},
 url = {http://portal.acm.org/citation.cfm?id=887006.887010},
 acmid = {887010},
 publisher = {IGI Publishing},
 address = {Hershey, PA, USA},
}

%%% Notes! This is because the atsign-INBOOK citation type specifies EITHER
%%% editor or author, but not both. In my experiments with the harvard/dcu
%%% bibtex style (and presumably this applies to other styles too), bibtex
%%% ignores the editor information if author information exists in an
%%% atsign-INBOOK entry. atsign-INCOLLECTION is far more commonly used in my references,
%%% and in the absence of an editor I believe most bibtex styles will just
%%% ommit the editor from the reference - the chapter information will not
%%% end up in the in-text citation as you suggest it should be but at least
%%% there is a place to put the editor if necessary.



% was 'Inbook' -- changed to incollection - (editor is different to author) - need to tell Asad to codify as such.
@incollection{Kong:2002:IEC:887006.887010,
  author =      {Kong, Wei-Chang},
  editor =      {Theerasak Thanasankit},
  title =       {Chapter 9},
  booktitle =   {E-commerce and cultural values (Incoll-w-text (chap 9) 'title')},
  year =        {2002},
  address =     {Hershey, PA, USA},
  publisher =   {IGI Publishing},
  url =         {http://portal.acm.org/citation.cfm?id=887006.887010},
  pages =       {51--74},
  numpages =    {24},
  acmid =       {887010},
  isbn =        {1-59140-056-2},
  number =      "",
  type =        "",
  month =       "",
  note =        "",
}

% incol when the chapter is 'text' - due to presence of editor (different to author)
@incollection{Kong:2003:IEC:887006.887011,
 author = {Kong, Wei-Chang},
 title = {The implementation of electronic commerce in SMEs in Singapore (Incoll)},
 booktitle = {E-commerce and cultural values},
 editor = {Thanasankit, Theerasak},
 year = {2003},
 isbn = {1-59140-056-2},
 pages = {51--74},
 numpages = {24},
 url = {http://portal.acm.org/citation.cfm?id=887006.887010},
 acmid = {887010},
 publisher = {IGI Publishing},
 address = {Hershey, PA, USA},
}

% ------ test
%incollection{Kong:2003:IEC:887006.887010,
% author = {Kong, Wei-Chang},
% chapter = {The implementation of electronic commerce in SMEs in Singapore (Incoll-text-in-chap)},
% booktitle = {booktitle E-commerce and cultural values},
% title =   {The title},
% editor = {Thanasankit, Theerasak},
% year = {2003},
% isbn = {1-59140-056-2},
% pages = {51--74},
% numpages = {24},
% url = {http://portal.acm.org/citation.cfm?id=887006.887010},
% acmid = {887010},
% publisher = {IGI Publishing},
% address = {Hershey, PA, USA},
%}


% ---------





% Need inbook with num in chapter

% and inbook with number in chapter
@InBook{Kong:2004:IEC:123456.887010,
  author =      {Kong, Wei-Chang},
  editor =      {Theerasak Thanasankit},
  title =       {E-commerce and cultural values - (InBook-num-in-chap)},
  chapter =     {9},
  year =        {2004},
  address =     {Hershey, PA, USA},
  publisher =   {IGI Publishing},
  url =         {http://portal.acm.org/citation.cfm?id=887006.887010},
  pages =       {51--74},
  numpages =    {24},
  acmid =       {887010},
  isbn =        {1-59140-056-2},
  number =      "",
  type =        "",
  month =       "",
  note =        "",
}


% and inbook with text in chapter
@Inbook{Kong:2005:IEC:887006.887010,
  author =      {Kong, Wei-Chang},
  editor =      {Theerasak Thanasankit},
  title =       {E-commerce and cultural values (Inbook-text-in-chap)},
  chapter =     {The implementation of electronic commerce in SMEs in Singapore},
  year =        {2005},
  address =     {Hershey, PA, USA},
  publisher =   {IGI Publishing},
  url =         {http://portal.acm.org/citation.cfm?id=887006.887010},
  type =        {Chapter:},
  pages =       {51--74},
  numpages =    {24},
  acmid =       {887010},
  isbn =        {1-59140-056-2},
  number =      "",
  month =       "",
  note =        "",
}


% and inbook with a num and type field
@Inbook{Kong:2006:IEC:887006.887010,
  author =      {Kong, Wei-Chang},
  editor =      {Theerasak Thanasankit},
  title =       {E-commerce and cultural values (Inbook-num chap)},
  chapter =     {22},
  year =        {2006},
  address =     {Hershey, PA, USA},
  publisher =   {IGI Publishing},
  url =         {http://portal.acm.org/citation.cfm?id=887006.887010},
  type =        {Chapter (in type field)},
  pages =       {51--74},
  numpages =    {24},
  acmid =       {887010},
  isbn =        {1-59140-056-2},
  number =      "",
  month =       "",
  note =        "",
}


% and incol coz we have a BLANK chapter - due to presence of editor
%atIncollection{Kong:2006:IEC:887006.887011,
%  author =     {Kong, Wei-Chang},
%  editor =     {Theerasak Thanasankit},
%  title =      "The title"
%  booktitle =  {E-commerce and cultural values (Incol-coz-blank-chap)},
%  year =       {2006},
%  address =    {Hershey, PA, USA},
%  publisher =  {IGI Publishing},
%  url =        {http://portal.acm.org/citation.cfm?id=887006.887010},
%  type =       {Type!},
%  chapter =    {},
%  pages =      {51--74},
%  numpages =   {24},
%  acmid =      {887010},
%  isbn =       {1-59140-056-2},
%  number =     "",
%  month =      "",
%  note =       "",
%}

@article{SaeediMEJ10,
            author = {Mehdi Saeedi and Morteza Saheb Zamani and Mehdi Sedighi},
            title = {A library-based synthesis methodology for reversible logic},
            journal = {Microelectron. J.},
            volume = {41},
            number = {4},
            month = apr,
            year = {2010},
            pages = {185--194},
}

@ARTICLE{SaeediJETC10,
            author = {Mehdi Saeedi and Morteza Saheb Zamani and Mehdi Sedighi and Zahra Sasanian},
            title = {Synthesis of Reversible Circuit Using Cycle-Based Approach},
            journal = {J. Emerg. Technol. Comput. Syst.},
            volume = {6},
            number = {4},
            month = dec,
            year = {2010}
            }

% Asad's new version
@article{Kirschmer:2010:AEI:1958016.1958018,
 author = {Kirschmer, Markus and Voight, John},
 title = {Algorithmic Enumeration of Ideal Classes for Quaternion Orders},
 journal = {SIAM J. Comput.},
 issue_date = {January 2010},
 volume = {39},
 number = {5},
 month = jan,
 year = {2010},
 issn = {0097-5397},
 pages = {1714--1747},
 numpages = {34},
 url = {http://dx.doi.org/10.1137/080734467},
 doi = {https://doi.org/10.1137/080734467},
 acmid = {1958018},
 publisher = {Society for Industrial and Applied Mathematics},
 address = {Philadelphia, PA, USA},
 keywords = {ideal classes, maximal orders, number theory, quaternion algebras},
}


% incol due to presence of booktitle
@incollection{Hoare:1972:CIN:1243380.1243382,
 author = {Hoare, C. A. R.},
 title = {Chapter II: Notes on data structuring},
 booktitle = {Structured programming (incoll)},
 editor = {Dahl, O. J. and Dijkstra, E. W. and Hoare, C. A. R.},
 year = {1972},
 isbn = {0-12-200550-3},
 pages = {83--174},
 numpages = {92},
 url = {http://portal.acm.org/citation.cfm?id=1243380.1243382},
 acmid = {1243382},
 publisher = {Academic Press Ltd.},
 address = {London, UK, UK},
}

% incol due to presence of booktitle
@incollection{Lee:1978:TQA:800025.1198348,
 author = {Lee, Jan},
 title = {Transcript of question and answer session},
 booktitle = {History of programming languages I (incoll)},
 editor = {Wexelblat, Richard L.},
 year = {1981},
 isbn = {0-12-745040-8},
 pages = {68--71},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/800025.1198348},
 doi = {http://doi.acm.org/10.1145/800025.1198348},
 acmid = {1198348},
 publisher = {ACM},
 address = {New York, NY, USA},
}

% incol due to booktitle
@incollection{Dijkstra:1979:GSC:1241515.1241518,
 author = {Dijkstra, E.},
 title = {Go to statement considered harmful},
 booktitle = {Classics in software engineering (incoll)},
 year = {1979},
 isbn = {0-917072-14-6},
 pages = {27--33},
 numpages = {7},
 url = {http://portal.acm.org/citation.cfm?id=1241515.1241518},
 acmid = {1241518},
 publisher = {Yourdon Press},
 address = {Upper Saddle River, NJ, USA},
}

% incol due to booktitle
@incollection{Wenzel:1992:TVA:146022.146089,
 author = {Wenzel, Elizabeth M.},
 title = {Three-dimensional virtual acoustic displays},
 booktitle = {Multimedia interface design (incoll)},
 year = {1992},
 isbn = {0-201-54981-6},
 pages = {257--288},
 numpages = {32},
 url = {http://portal.acm.org/citation.cfm?id=146022.146089},
 doi = {10.1145/146022.146089},
 acmid = {146089},
 publisher = {ACM},
 address = {New York, NY, USA},
}

% incol due to booktitle
@incollection{Mumford:1987:MES:54905.54911,
 author = {Mumford, E.},
 title = {Managerial expert systems and organizational change: some critical research issues},
 booktitle = {Critical issues in information systems research (incoll)},
 year = {1987},
 isbn = {0-471-91281-6},
 pages = {135--155},
 numpages = {21},
 url = {http://portal.acm.org/citation.cfm?id=54905.54911},
 acmid = {54911},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}

@book{McCracken:1990:SSC:575315,
 author = {McCracken, Daniel D. and Golden, Donald G.},
 title = {Simplified Structured COBOL with Microsoft/MicroFocus COBOL},
 year = {1990},
 isbn = {0471514071},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}

% Let's include Boris / BBeeton entries  (multi-volume works)

@book {MR781537,
    AUTHOR = {H{\"o}rmander, Lars},
     TITLE = {The analysis of linear partial differential operators. {III}},
    SERIES = {Grundlehren der Mathematischen Wissenschaften [Fundamental
              Principles of Mathematical Sciences]},
    VOLUME = {275},
      NOTE = {Pseudodifferential operators},
PUBLISHER = {Springer-Verlag},
   ADDRESS = {Berlin, Germany},
      YEAR = {1985},
     PAGES = {viii+525},
      ISBN = {3-540-13828-5},
   MRCLASS = {35-02 (35Sxx 47G05 58G15)},
  MRNUMBER = {781536 (87d:35002a)},
MRREVIEWER = {Min You Qi},
}

@book {MR781536,
    AUTHOR = {H{\"o}rmander, Lars},
     TITLE = {The analysis of linear partial differential operators. {IV}},
    SERIES = {Grundlehren der Mathematischen Wissenschaften [Fundamental
              Principles of Mathematical Sciences]},
    VOLUME = {275},
      NOTE = {Fourier integral operators},
PUBLISHER = {Springer-Verlag},
   ADDRESS = {Berlin, Germany},
      YEAR = {1985},
     PAGES = {vii+352},
      ISBN = {3-540-13829-3},
   MRCLASS = {35-02 (35Sxx 47G05 58G15)},
  MRNUMBER = {781537 (87d:35002b)},
MRREVIEWER = {Min You Qi},
}

%%%%%%%%%%%%%%%%%%%%%% Start of Aptara sample bib entries

% acmsmall-sam.bib
@InProceedings{Adya-01,
  author        = {A. Adya and P. Bahl and J. Padhye and A.Wolman and L. Zhou},
  title         = {A multi-radio unification protocol for {IEEE} 802.11 wireless networks},
  booktitle     = {Proceedings of the IEEE 1st International Conference on Broadnets Networks (BroadNets'04)},
  publisher     = "IEEE",
  address       = "Los Alamitos, CA",
  year          = {2004},
  pages         = "210--217"
}

@article{Akyildiz-01,
  author        = {I. F. Akyildiz and W. Su and Y. Sankarasubramaniam and E. Cayirci},
  title         = {Wireless Sensor Networks: A Survey},
  journal       = {Comm. ACM},
  volume        = 38,
  number        = "4",
  year          = {2002},
  pages         = "393--422"
}

@article{Akyildiz-02,
  author        = {I. F. Akyildiz and T. Melodia and K. R. Chowdhury},
  title         = {A Survey on Wireless Multimedia Sensor Networks},
  journal       = {Computer Netw.},
  volume        = 51,
  number        = "4",
  year          = {2007},
  pages         = "921--960"
}

@InProceedings{Bahl-02,
  author        = {P. Bahl and R. Chancre and J. Dungeon},
  title         = {{SSCH}: Slotted Seeded Channel Hopping for Capacity Improvement in {IEEE} 802.11 Ad-Hoc Wireless Networks},
  booktitle     = {Proceeding of the 10th International Conference on Mobile Computing and Networking (MobiCom'04)},
  publisher     = "ACM",
  address       = "New York, NY",
  year          = {2004},
  pages         = "112--117"
}

@misc{CROSSBOW,
  key       = {CROSSBOW},
  title     = {{XBOW} Sensor Motes Specifications},
  note      = {http://www.xbow.com},
  year      = 2008
}

@article{Culler-01,
  author        = {D. Culler and D. Estrin and M. Srivastava},
  title         = {Overview of Sensor Networks},
  journal       = {IEEE Comput.},
  volume        = 37,
  number        = "8 (Special Issue on Sensor Networks)",
  publisher     = "IEEE",
  address       = "Los Alamitos, CA",
  year          = {2004},
  pages         = "41--49"
}

@misc{Harvard-01,
    key         = {Harvard CodeBlue},
    title       = {{CodeBlue}: Sensor Networks for Medical Care},
    note        = {http://www.eecs.harvard.edu/mdw/ proj/codeblue/},
    year        = 2008
}

@InProceedings{Natarajan-01,
    author      = {A. Natarajan and M. Motani and B. de Silva and K. Yap and K. C. Chua},
    title       = {Investigating Network Architectures for Body Sensor Networks},
    booktitle   = {Network Architectures},
    editor      = {G. Whitcomb and P. Neece},
    publisher   = "Keleuven Press",
    address     = "Dayton, OH",
    year        = {2007},
    pages       = "322--328",
    eprint      = "960935712",
    primaryclass = "cs",
}

@techreport{Tzamaloukas-01,
  author        = {A. Tzamaloukas and J. J. Garcia-Luna-Aceves},
  title         = {Channel-Hopping Multiple Access},
  number =        {I-CA2301},
  institution =   {Department of Computer Science, University of California},
  address =       {Berkeley, CA},
  year          = {2000}
}

@BOOK{Zhou-06,
  author        = {G. Zhou and J. Lu and C.-Y. Wan and M. D. Yarvis and J. A. Stankovic},
  title         = {Body Sensor Networks},
  publisher     = "MIT Press",
  address       = "Cambridge, MA",
  year          = {2008}
}

@mastersthesis{ko94,
author = "Jacob Kornerup",
title = "Mapping Powerlists onto Hypercubes",
school = "The University of Texas at Austin",
note = "(In preparation)",
year = "1994"}
%month = "dec",}

@PhdThesis{gerndt:89,
  author =       "Michael Gerndt",
  title =        "Automatic Parallelization for Distributed-Memory
                  Multiprocessing Systems",
  school =       "University of Bonn",
  year =         1989,
  address =      "Bonn, Germany",
  month =        dec
}

@article{6:1:1,
author = "J. E. {Archer, Jr.} and R. Conway and F. B. Schneider",
title = "User recovery and reversal in interactive systems",
journal = "ACM Trans. Program. Lang. Syst.",
volume =  "6",
number = "1",
month = jan,
year = 1984,
pages = "1--19"}

@article{7:1:137,
author = "D. D. Dunlop and V. R. Basili",
title = "Generalizing specifications for uniformly implemented loops",
journal = "ACM Trans. Program. Lang. Syst.",
volume =  "7",
number = "1",
month = jan,
year = 1985,
pages = "137--158"}

@article{7:2:183,
author = "J. Heering and P. Klint",
title = "Towards monolingual programming environments",
journal = "ACM Trans. Program. Lang. Syst.",
volume =  "7",
number = "2",
month = apr,
year = 1985,
pages = "183--213"}

@book{knuth:texbook,
author = "Donald E. Knuth",
title = "The {\TeX{}book}",
publisher = "Addison-Wesley",
address = "Reading, MA.",
year = 1984}

@article{6:3:380,
author = "E. Korach and D.  Rotem and N. Santoro",
title = "Distributed algorithms for finding centers and medians in networks",
journal = "ACM Trans. Program. Lang. Syst.",
volume =  "6",
number = "3",
month = jul,
year = 1984,
pages = "380--401"}

@book{lamport:latex,
author = "Leslie Lamport",
title = "\it {\LaTeX}: A Document Preparation System",
publisher = "Addison-Wesley",
address = "Reading, MA.",
year = 1986}

@article{7:3:359,
author = "F. Nielson",
title = "Program transformations in a denotational setting",
journal = "ACM Trans. Program. Lang. Syst.",
volume =  "7",
number = "3",
month = jul,
year = 1985,
pages = "359--379"}

%testing
@BOOK{test,
   author = "Donald E. Knuth",
   title = "Seminumerical Algorithms",
   volume = 2,
   series = "The Art of Computer Programming",
   publisher = "Addison-Wesley",
   address = "Reading, MA",
   edition = "2nd",
   month = "10~" # jan,
   year = "1981",
}

@inproceedings{reid:scribe,
author = "Brian K. Reid",
title = "A high-level approach to computer document formatting",
booktitle = "Proceedings of the 7th Annual Symposium on Principles of
  Programming Languages",
month = jan,
year = 1980,
publisher = "ACM",
address = "New York",
pages = "24--31"}

@article{Zhou:2010:MMS:1721695.1721705,
 author = {Zhou, Gang and Wu, Yafeng and Yan, Ting and He, Tian and Huang, Chengdu and Stankovic, John A. and Abdelzaher, Tarek F.},
 title = {A multifrequency MAC specially designed for wireless sensor network applications},
 journal = {ACM Trans. Embed. Comput. Syst.},
 issue_date = {March 2010},
 volume = 9,
 number = 4,
 month = {April},
 year = 2010,
 issn = {1539-9087},
 pages = {39:1--39:41},
 articleno = 39,
 numpages = 41,
 url = {http://doi.acm.org/10.1145/1721695.1721705},
 doi = {10.1145/1721695.1721705},
 acmid = 1721705,
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Wireless sensor networks, media access control, multi-channel, radio interference, time synchronization},
}


@online{TUGInstmem,
  key =          {TUG},
  year  =        2017,
  title =        "Institutional members of the {\TeX} Users Group",
  url =          "http://wwtug.org/instmem.html",
  lastaccessed = "May 27, 2017",
}

@online{CTANacmart,
  author =    {Boris Veytsman},
  title =  {acmart---{C}lass for typesetting publications of {ACM}},
  url =    {http://www.ctan.org/pkg/acmart},
  lastaccessed = {May 27, 2017}
  }

@ARTICLE{bowman:reasoning,
    author = {Bowman, Mic and Debray, Saumya K. and Peterson, Larry L.},
    title = {Reasoning About Naming Systems},
    journal = {ACM Trans. Program. Lang. Syst.},
    volume = {15},
    number = {5},
    pages = {795-825},
    month = {November},
    year = {1993},
    doi = {10.1145/161468.161471},
}

@ARTICLE{braams:babel,
    author = {Braams, Johannes},
    title = {Babel, a Multilingual Style-Option System for Use with LaTeX's Standard Document Styles},
    journal = {TUGboat},
    volume = {12},
    number = {2},
    pages = {291-301},
    month = {June},
    year = {1991},
}

@INPROCEEDINGS{clark:pct,
  AUTHOR = "Malcolm Clark",
  TITLE = "Post Congress Tristesse",
  BOOKTITLE = "TeX90 Conference Proceedings",
  PAGES = "84-89",
  ORGANIZATION = "TeX Users Group",
  MONTH = "March",
  YEAR = {1991}
}

@ARTICLE{herlihy:methodology,
    author = {Herlihy, Maurice},
    title = {A Methodology for Implementing Highly Concurrent Data Objects},
    journal = {ACM Trans. Program. Lang. Syst.},
    volume = {15},
    number = {5},
    pages = {745-770},
    month = {November},
    year = {1993},
    doi = {10.1145/161468.161469},
}

@BOOK{salas:calculus,
  AUTHOR = "S.L. Salas and Einar Hille",
  TITLE = "Calculus: One and Several Variable",
  PUBLISHER = "John Wiley and Sons",
  ADDRESS = "New York",
  YEAR = "1978"
}

@MANUAL{Fear05,
  title =        {Publication quality tables in {\LaTeX}},
  author =       {Simon Fear},
  month =        {April},
  year =         2005,
  note =         {\url{http://www.ctan.org/pkg/booktabs}}
}

@Manual{Amsthm15,
  title =        {Using the amsthm Package},
  organization = {American Mathematical Society},
  month =        {April},
  year =         2015,
  note =         {\url{http://www.ctan.org/pkg/amsthm}}
}

@ArtifactSoftware{R,
    title = {R: A Language and Environment for Statistical Computing},
    author = {{R Core Team}},
    organization = {R Foundation for Statistical Computing},
    address = {Vienna, Austria},
    year = {2019},
    url = {https://www.R-project.org/},
}

@ArtifactDataset{UMassCitations,
 author    =  {Sam Anzaroot and Andrew McCallum},
 title     =  {{UMass} Citation Field Extraction Dataset},
 year      = 2013,
 url       =
    {http://www.iesl.cs.umass.edu/data/data-umasscitationfield},
 lastaccessed = {May 27, 2019}
}
